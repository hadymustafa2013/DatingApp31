{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_models/Pagination.ts","./src/app/_resolvers/lists.resolver.ts","./src/app/_resolvers/member-detail.resolver.ts","./src/app/_resolvers/member-edit.resolver.ts","./src/app/_resolvers/member-list.resolver.ts","./src/app/_resolvers/messages.resolver.ts","./src/app/_services/alertify.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/error.interceptor.ts","./src/app/_services/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/routes.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\r\n    }\n\n    this.alertify.error(\"You shall not pass!!!\");\n    this.router.navigate(['/home']);\n    return false;\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n\r\n  canDeactivate(component: MemberEditComponent) {\r\n    if (component.editForm.dirty) {\r\n      return confirm(\"Are you sure you want to continue? Any unsaved changes will be lost.\")\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","\r\nexport interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber: number = 1;\r\n  pageSize: number = 5;\r\n  likesParam = 'likers';\r\n\r\n  constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n      catchError(error => {\r\n        console.log(error);\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n\r\n  constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(route.params['id']).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(private userService: UserService, private authService: AuthService,\r\n    private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving your data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber: number = 1;\r\n  pageSize: number = 5;\r\n\r\n  constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        console.log(error);\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber: number = 1;\r\n  pageSize: number = 5;\r\n  messageContainer: 'Unread';\r\n\r\n  constructor(private userService: UserService, private authService: AuthService,\r\n    private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n      this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n      catchError(error => {\r\n        console.log(error);\r\n        this.alertify.error('Problem retrieving messages');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  \n  constructor() { }\n\n  confirm(message: string, okCallBack: (e) => any) {\n    alertify.confirm(message, (e: any) => {\r\n      if (e) {\r\n        okCallBack(e);\r\n      } else {}\r\n    });\r\n  }\n\n  success(message: string) {\n    alertify.success(message);\r\n  }\n\n  error(message: string) {\n    alertify.error(message);\r\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\r\n  }\n\n  message(message: string) {\n    alertify.message(message);\r\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AlertifyService } from './alertify.service';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { from } from 'rxjs';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: User;\r\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient, private alertify: AlertifyService) { }\r\n\r\n  changeMemberPhoto(photoUrl: string) {\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model).pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          localStorage.setItem('user', JSON.stringify(user.user));\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          this.currentUser = user.user;\r\n          this.changeMemberPhoto(this.currentUser.photoUrl);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError.errors && typeof serverError.errors === 'object') {\r\n            for (const key in serverError.errors) {\r\n              if (serverError.errors[key]) {\r\n                modalStateErrors += serverError.errors[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modalStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { PaginatedResult } from '../_models/Pagination';\r\nimport { map } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\r\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append(\"pageNumber\", page);\r\n      params = params.append(\"pageSize\", itemsPerPage);\r\n    }\r\n\r\n    if (userParams != null) {\r\n      params = params.append(\"minAge\", userParams.minAge);\r\n      params = params.append(\"maxAge\", userParams.maxAge);\r\n      params = params.append(\"gender\", userParams.gender);\r\n      params = params.append(\"orderBy\", userParams.orderBy);\r\n    }\r\n    if (likesParam === 'likers') {\r\n      params = params.append(\"likers\", \"true\");\r\n    }\r\n    if (likesParam === 'likees') {\r\n      params = params.append(\"likees\", \"true\");\r\n    }\r\n\r\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get(\"Pagination\") != null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get(\"Pagination\"));\r\n          }\r\n          return paginatedResult;\r\n        }));\r\n  }\r\n\r\n  getUser(id): Observable<User> {\r\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\r\n  }\r\n\r\n  updateUser(id: number, user: User) {\r\n    return this.http.put(this.baseUrl + 'users/' + id, user);\r\n  }\r\n\r\n  setMainPhoto(userId: number, id: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {})\r\n  }\r\n\r\n  deletePhoto(userId: number, id: number) {\r\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\r\n  }\r\n\r\n  sendLike(id: number, recepientId: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recepientId, {});\r\n  }\r\n\r\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('MessageContainer', messageContainer);\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append(\"pageNumber\", page);\r\n      params = params.append(\"pageSize\", itemsPerPage);\r\n\r\n      return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', { observe: 'response', params })\r\n        .pipe(\r\n          map(response => {\r\n            paginatedResult.result = response.body;\r\n            if (response.headers.get(\"Pagination\") !== null) {\r\n              paginatedResult.pagination = JSON.parse(response.headers.get(\"Pagination\"));\r\n            }\r\n            return paginatedResult;\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  getMessageThread(id: number, recepientId: number) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recepientId);\r\n  }\r\n\r\n  sendMessage(id: number, message: Message) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\r\n  }\r\n\r\n  deleteMessage(id: number, userId: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\r\n  }\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {}).subscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from './_models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n    if (user) {\r\n      this.authService.currentUser = user;\r\n      this.authService.changeMemberPhoto(user.photoUrl);\r\n    }\r\n  }\r\n}\r\n","\n  <app-nav></app-nav>\n  <router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { NgxGalleryModule } from 'ngx-gallery-9';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { TimeagoModule } from 'ngx-timeago'\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { from } from 'rxjs';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\n\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    MemberListComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    MemberCardComponent,\r\n    MemberDetailComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    MemberMessagesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    BsDropdownModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n    BsDatepickerModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains: ['localhost:5000'],\r\n        blacklistedRoutes: ['localhost:5000/api/auth']\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    ErrorInterceptorProvider,\r\n    MemberDetailResolver,\r\n    MemberListResolver,\r\n    MemberEditResolver,\r\n    ListsResolver,\r\n    MessagesResolver,\r\n    PreventUnsavedChanges\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode: any = false;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\r\n  }\n\n  cancelRegisterMode(cancelRegister: boolean) {\n    this.registerMode = cancelRegister;\r\n  }\n\n}\n","\n\n<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\r\nimport { Pagination, PaginatedResult } from '../_models/Pagination';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService, private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\n    this.likesParam = 'likers';\n  }\n\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\n\n  loadUsers() {\r\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\r\n      .subscribe((res: PaginatedResult<User[]>) => {\r\n        this.users = res.result;\r\n        this.pagination = res.pagination;\r\n      }, error => {\r\n        this.alertify.error(error);\r\n      });\r\n  }\n}\n","\n<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"likers\" (click)=\"loadUsers()\">Members who like me</button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"likees\" (click)=\"loadUsers()\">Members who I like</button>\n    </div>\n  </div>\n\n  <br>\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n              (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n  </pagination>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../_models/user';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\r\n      this.alertify.success(\"You have liked: \" + this.user.knownAs);\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\n}\n","\n<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" />\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\"><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>{{user.knownAs}}, {{user.age}}</h6>\n    <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../_models/user';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery-9';\r\nimport { NgForOf } from '@angular/common';\r\nimport { TabsetComponent } from 'ngx-bootstrap/tabs/public_api';\r\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\r\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedtab = params['tab'];\r\n      this.memberTabs.tabs[selectedtab > 0 ? selectedtab : 0].active = true;\r\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\r\n    for (const photo of this.user.photos) {\r\n      imageUrls.push({\r\n        small: photo.url,\r\n        medium: photo.url,\r\n        big: photo.url,\r\n        decription: photo.description\r\n      });\r\n    }\r\n    return imageUrls;\r\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\n\n  //loadUser() {\n  //  this.userService.getUser(+this.route.snapshot.params['id']).subscribe((user: User) => {\r\n  //    this.user = user;\r\n  //  }, error => {\r\n  //      this.alertify.error(error);\r\n  //  });\r\n  //}\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>{{user.knownAs}}'s Profile</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl}}\" alt=\"{{user.knownAs}}\" />\n        <div class=\"card-body\">\n          <strong>Location:</strong>\n          <p>{{user.city}}, {{user.country}}</p>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago }}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created | date: \"mediumDate\"}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\" #memberTabs>\n          <tab heading=\"About {{user.knownAs}}\">\n            <h4>Description</h4>\n            <p>{{user.introduction}}</p>\n            <h4>Looking For</h4>\n            <p>{{user.lookingFor}}</p>\n          </tab>\n          <tab heading=\"Interests\">\n            <h4>Interests</h4>\n            <p>{{user.interests}}</p>\n          </tab>\n          <tab heading=\"Photos\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n          </tab>\n          <tab heading=\"Messages\">\n            <app-member-messages [recepientId]=\"user.id\"></app-member-messages>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { window } from 'rxjs/operators';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AuthService } from '../../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  user: User;\r\n  photoUrl: string;\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadnotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService, private userService: UserService, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  updateUser() {\r\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\r\n      this.alertify.success(\"Profile updated successfully\");\r\n      this.editForm.reset(this.user);\r\n    }, error => {\r\n        this.alertify.error(error);\r\n    }); \r\n  }\r\n\r\n  updateMainPhoto(photoUrl) {\r\n    this.user.photoUrl = photoUrl;\r\n  }\r\n}\r\n","\n<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>Your Profile</h1>\n    </div>\n    <div class=\"col-md-8\">\n      <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n        <strong>Information:</strong>You have made changes. Any unsaved changes will be lost!\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" />\n        <div class=\"card-body\">\n          <strong>Location:</strong>\n          <p>{{user.city}}, {{user.country}}</p>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago }}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created | date: \"mediumDate\"}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <button [disabled]=\"!editForm.dirty\" class=\"btn btn-success btn-block\" (click)=\"updateUser()\">Save Changes</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n          <tab heading=\"Edit Profile\">\n            <form #editForm=\"ngForm\" (ngSubmit)=\"updateUser()\">\n              <h4>Description</h4>\n              <textarea name=\"introduction\" class=\"form-control\" rows=\"6\" [(ngModel)]=\"user.introduction\"></textarea>\n              <h4>Looking For</h4>\n              <textarea name=\"lookingFor\" class=\"form-control\" rows=\"6\" [(ngModel)]=\"user.lookingFor\"></textarea>\n              <h4>Interests</h4>\n              <textarea name=\"interests\" class=\"form-control\" rows=\"6\" [(ngModel)]=\"user.interests\"></textarea>\n              <h4>Location Details:</h4>\n              <div class=\"form-inline\">\n                <label for=\"city\">City</label>\n                <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.city\" />\n                <label for=\"country\">Country</label>\n                <input class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"user.country\" />\n              </div>\n            </form>\n          </tab>\n          <tab heading=\"Edit Photos\">\n            <app-photo-editor [photos]=\"user.photos\" (getMemberPhotoChange)=\"updateMainPhoto($event)\"></app-photo-editor>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination, PaginatedResult } from '../../_models/Pagination';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem('user'));\r\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n\r\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n\r\n    this.userParams.gender = this.user.gender === 'male' ? 'female' : 'male';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.userParams.orderBy = 'lastActive';\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.gender = this.user.gender === 'male' ? 'female' : 'male';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\r\n      .subscribe((res: PaginatedResult<User[]>) => {\r\n        this.users = res.result;\r\n        this.pagination = res.pagination;\r\n    }, error => {\r\n        this.alertify.error(error);\r\n    });\r\n  }\r\n}\r\n","\n<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n\n<div class=\"container mt-3\">\n  <form class=\"form-inline\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\n             [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\"\n             [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\"\n              [(ngModel)]=\"userParams.gender\" name=\"gender\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{gender.display}}\n        </option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"loadUsers()\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"resetFilters()\" style=\"margin-left:10px\">Reset Filter</button>\n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" [(ngModel)]=\"userParams.orderBy\"\n               (click)=\"loadUsers()\" btnRadio=\"lastActive\">Last Active</button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" [(ngModel)]=\"userParams.orderBy\"\n                (click)=\"loadUsers()\" btnRadio=\"created\">Newest Members</button>\n      </div>\n    </div>\n\n  </form>\n  <br>\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [totalItems]=\"pagination.totalItems\"  [itemsPerPage]=\"pagination.itemsPerPage\" \n              [(ngModel)]=\"pagination.currentPage\" \n              (pageChanged)=\"pageChanged($event)\" \n              previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../_models/Message';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CursorError } from '@angular/compiler/src/ml_parser/lexer';\r\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recepientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService,\n    private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recepientId)\r\n      .pipe(\r\n        tap(messages => {\r\n          for (let i = 0; i < messages.length; i++) {\r\n            if (messages[i].isRead === false && messages[i].recepientId === currentUserId) {\r\n              this.userService.markAsRead(currentUserId, messages[i].id);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(messages => {\r\n        this.messages = messages;\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      });\r\n  }\n\n  sendMessage() {\n    this.newMessage.recepientId = this.recepientId;\r\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\r\n      .subscribe((message: Message) => {\r\n        this.messages.unshift(message);\r\n        console.log(message);\r\n        this.newMessage.content = '';\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      });\r\n  }\n}\n","\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      No messages yet... say hi by using the message box below\n    </div>\n\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recepientId\">\n          <span class=\"chat-img float-left\">\n            <img src=\"{{ message.senderPhotoUrl }}\"\n                 alt=\"{{ message.senderKnownAs }}\"\n                 class=\"rounded-circle\" />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{ message.senderKnownAs }}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">\n                  {{\n                  message.messageSent | timeago\n                  }}\n                </span>\n              </small>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n\n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recepientId\">\n          <span class=\"chat-img float-right\">\n            <img src=\"{{ message.senderPhotoUrl }}\"\n                 alt=\"{{ message.senderKnownAs }}\"\n                 class=\"rounded-circle\" />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">\n                  {{\n                  message.messageSent | timeago\n                  }}\n                </span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(unread)</span>\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Read {{ message.dateRead | timeago }})</span>\n              </small>\n              <strong class=\"primary-font float-right\">\n                {{\n                message.senderKnownAs\n                }}\n              </strong>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n      <div class=\"input-group\">\n        <input type=\"text\"\n               [(ngModel)]=\"newMessage.content\"\n               name=\"content\"\n               required\n               class=\"form-control input-sm\"\n               placeholder=\"send a private message\" />\n        <div class=\"input-group-append\">\n          <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { Photo } from '../../_models/photo';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() photos: Photo[];\r\n  @Output() getMemberPhotoChange = new EventEmitter<String>();\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver: boolean = false;\r\n  hasAnotherDropZoneOver: boolean = false;\r\n  baseUrl = environment.apiUrl;\r\n  currentMain: Photo;\r\n\r\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n   fileOverbase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n   }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const res: Photo = JSON.parse(response);\r\n        const photo = {\r\n          id: res.id,\r\n          url: res.url,\r\n          dateAdded: res.dateAdded,\r\n          description: res.description,\r\n          isMain: res.isMain\r\n        };\r\n        this.photos.push(photo);\r\n        if (photo.isMain) {\r\n          this.authService.changeMemberPhoto(photo.url);\r\n          this.authService.currentUser.photoUrl = photo.url;\r\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\r\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\r\n      this.currentMain.isMain = false;\r\n      photo.isMain = true;\r\n      this.authService.changeMemberPhoto(photo.url);\r\n      this.authService.currentUser.photoUrl = photo.url;\r\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n    }, error => {\r\n        this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  deletePhoto(id: number) {\r\n    let self = this;\r\n    console.log(\"1\");\r\n\r\n    self.alertify.confirm(\"Are you sure you want to delete this photo?\",  () => {\r\n      console.log(\"2\");\r\n      self.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\r\n        console.log(\"3\");\r\n        self.photos.splice(this.photos.findIndex(p => p.id === id), 1);\r\n        self.alertify.success(\"Photo has been deleted.\");\r\n      }, error => {\r\n          console.log(\"4\");\r\n          console.log(error);\r\n          self.alertify.error(\"Failed to delete the photo.\");\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","\n<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n    <img src=\"{{photo.url}}\" class=\"img-thumbnail p-1\" alt=\"\" />\n    <div class=\"text-center\">\n      <button type=\"button\" class=\"btn btn-sm  mr-1\" (click)=\"setMainPhoto(photo)\" \n              [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n              [disabled]=\"photo.isMain\">Main</button>\n      <button type=\"button\" class=\"btn btn-sm btn-danger\" [disabled]=\"photo.isMain\" (click)=\"deletePhoto(photo.id)\"><i class=\"fa fa-trash fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n\n  <div class=\"col-md-3\">\n\n    <h3>Add Photos</h3>\n\n    <div ng2FileDrop\n         [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n         (fileOver)=\"fileOverbase($event)\"\n         [uploader]=\"uploader\"\n         class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n      <i class=\"fa fa-upload fa-3x\"></i>\n      Drop Photos Here\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th width=\"50%\">Name</th>\n          <th>Size</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td><strong>{{ item?.file?.name }}</strong></td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress mb-4\" style=\"\">\n          <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-success btn-s\"\n              (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button type=\"button\" class=\"btn btn-warning btn-s\"\n              (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n        <span class=\"fa fa-ban\"></span> Cancel all\n      </button>\n      <button type=\"button\" class=\"btn btn-danger btn-s\"\n              (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/Message';\r\nimport { Pagination, PaginatedResult } from '../_models/Pagination';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService, private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\r\n      this.pagination = data['messages'].pagination;\r\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage, this.pagination.itemsPerPage, this.messageContainer)\r\n      .subscribe((res: PaginatedResult<Message[]>) => {\r\n        this.messages = res.result;\r\n        this.pagination = res.pagination;\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      });\r\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm(\"Are you sure you want to delete this message\", () => {\r\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\r\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        this.alertify.success(\"Message has been deleted\");\r\n      }, error => {\r\n          this.alertify.error(\"Failed to delete the message\");\r\n      });\r\n    });\r\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\r\n    this.loadMessages();\r\n  }\n\n}\n","\n<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Unread\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Inbox\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Outbox\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n      <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 20%\">From / To</th>\n        <th style=\"width: 20%\">Sent / Received</th>\n        <th style=\"width: 20%\"></th>\n      </tr>\n      <tr *ngFor=\"let message of messages\" [routerLink]=\"['/members',\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab: 3}\">\n        <td>{{message.content}}</td>\n        <td>\n          <div *ngIf=\"messageContainer != 'Outbox'\">\n            <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\n            <strong>{{message.senderKnownAs}}</strong>\n          </div>\n          <div *ngIf=\"messageContainer == 'Outbox'\">\n            <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\n            <strong>{{message.recipientKnownAs}}</strong>\n          </div>\n        </td>\n        <td>{{message.messageSent | timeago}}</td>\n        <td>\n          <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\">Delete</button>\n        </td>\n      </tr>\n    </table>\n\n  </div>\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\"\n              [totalItems]=\"pagination.totalItems\"\n              [itemsPerPage]=\"pagination.itemsPerPage\"\n              [(ngModel)]=\"pagination.currentPage\"\n              (pageChanged)=\"pageChanged($event)\"\n              previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  photoUrl: string;\r\n\r\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.alertify.success(\"Logged in successfully!\");\r\n    }, error => {\r\n      console.log(\"Failed to login!\");\r\n      this.alertify.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/members']);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n    this.alertify.message(\"Logged out!\");\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Dating App</a>\r\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messages</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div class=\"dropdown\" *ngIf=\"loggedIn()\" dropdown>\r\n      <span class=\"mr-1\">\r\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\" />\r\n      </span>\r\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\r\n        Welcome {{authService.decodedToken.unique_name | titlecase}}\r\n      </a>\r\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\"><i class=\"fa fa-user\"></i>Edit Profile</a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a class=\"dropdown-item\" (click)=\"logOut()\"><i class=\"fa fa-sign-out\"></i>Log Out</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form #loginForm=\"ngForm\" *ngIf=\"!loggedIn()\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"User Name\" required [(ngModel)]=\"model.username\" name=\"username\">\r\n      <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" required [(ngModel)]=\"model.password\" name=\"password\">\r\n      <button [disabled]=\"!loginForm.valid\" class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n  \r\n</nav>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Input() ValuesFromHome: any;\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    },\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: [null, Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null : { 'mismatch': true };\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertify.success('Registration Successful');\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      }, () => {\r\n          this.authService.login(this.user).subscribe(() => {\r\n            this.router.navigate(['/members']);\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","\n  <form [formGroup]=\"registerForm\">\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\n    <hr>\n\n    <div class=\"form-group\">\n      <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n      <label class=\"radio-inline\">\n        <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n      </label>\n      <label class=\"radio-inline ml-3\">\n        <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\"\n             [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\"\n             class=\"form-control\" formControlName=\"username\" placeholder=\"Username\">\n      <div class=\"invalid-feedback\">Please choose a user name</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n             placeholder=\"Known as\" formControlName=\"knownAs\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\n             placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig]=\"bsConfig\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n             placeholder=\"City\" formControlName=\"city\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n             placeholder=\"Country\" formControlName=\"country\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"password\"\n             [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched }\"\n             class=\"form-control\" formControlName=\"password\" placeholder=\"Password\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">Password is required</div>\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\">Password must be at least 4 characters</div>\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\">Password can not exceed 8 characters</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"password\"\n             [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\n             || registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\"\n             class=\"form-control\" formControlName=\"confirmPassword\" placeholder=\"Confirm Password\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\">Password is required</div>\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch') && registerForm.get('confirmPassword').touched\">Passwords must match</div>\n    </div>\n\n    <div class=\"form-group text-center\">\n      <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\" (click)=\"register()\">Register</button>\n      <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n    </div>\n\n  </form>\n\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver }, canActivate: [AuthGuard] },\r\n  { path: 'members/:id', component: MemberDetailComponent, resolve: { user: MemberDetailResolver }, canActivate: [AuthGuard] },\r\n  { path: 'member/edit', component: MemberEditComponent, resolve: { user: MemberEditResolver }, canActivate: [AuthGuard], canDeactivate: [PreventUnsavedChanges] },\r\n  { path: 'lists', component: ListsComponent, resolve: { users: ListsResolver }, canActivate: [AuthGuard] },\r\n  { path: 'messages', component: MessagesComponent, canActivate: [AuthGuard], resolve: { messages: MessagesResolver } },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}