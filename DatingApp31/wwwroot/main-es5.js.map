{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/_models/ChatMessage.ts","webpack:///src/app/_models/Pagination.ts","webpack:///src/app/_resolvers/lists.resolver.ts","webpack:///src/app/_resolvers/member-detail.resolver.ts","webpack:///src/app/_resolvers/member-edit.resolver.ts","webpack:///src/app/_resolvers/member-list.resolver.ts","webpack:///src/app/_resolvers/messages.resolver.ts","webpack:///src/app/_services/alertify.service.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/chat.service.ts","webpack:///src/app/_services/error.interceptor.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","authService","router","alertify","loggedIn","error","navigate","providedIn","PreventUnsavedChanges","component","editForm","dirty","confirm","ChatMessage","user","msgText","PaginatedResult","ListsResolver","userService","pageNumber","pageSize","likesParam","route","getUsers","pipe","console","log","MemberDetailResolver","getUser","params","MemberEditResolver","decodedToken","nameid","MemberListResolver","MessagesResolver","getMessages","messageContainer","AlertifyService","message","okCallBack","AuthService","http","baseUrl","apiUrl","jwtHelper","photoUrl","currentPhotoUrl","asObservable","next","model","post","response","localStorage","setItem","token","JSON","stringify","decodeToken","currentUser","changeMemberPhoto","getItem","isTokenExpired","ChatService","connection","withUrl","configureLogging","Information","build","POST_URL","receivedMessageObject","sharedObj","onclose","start","on","mapReceivedMessage","setTimeout","msgDto","subscribe","data","ErrorInterceptor","handle","status","statusText","applicationError","headers","get","serverError","modalStateErrors","errors","key","ErrorInterceptorProvider","provide","useClass","multi","UserService","page","itemsPerPage","userParams","paginatedResult","append","minAge","maxAge","gender","orderBy","observe","result","body","pagination","parse","put","userId","recepientId","messageId","AppComponent","selector","templateUrl","styleUrls","tokenGetter","AppModule","forRoot","config","whitelistedDomains","blacklistedRoutes","declarations","imports","providers","bootstrap","ChatComponent","chatService","msgInboxArray","retrieveMappedObject","receivedObj","addToInbox","length","window","alert","broadcastMessage","obj","newObj","push","send","HomeComponent","registerMode","cancelRegister","ListsComponent","users","event","currentPage","loadUsers","res","pageChanged","MemberCardComponent","sendLike","success","knownAs","MemberDetailComponent","queryParams","selectedtab","memberTabs","tabs","active","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","getImages","imageUrls","photos","photo","small","url","medium","big","decription","description","tabId","selectTab","MemberEditComponent","$event","returnValue","updateUser","reset","updateMainPhoto","MemberListComponent","genderList","value","display","resetFilters","MemberMessagesComponent","newMessage","loadMessages","currentUserId","getMessageThread","messages","i","isRead","markAsRead","sendMessage","unshift","content","uploader","PhotoEditorComponent","getMemberPhotoChange","hasBaseDropZoneOver","hasAnotherDropZoneOver","initializeUploader","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","dateAdded","isMain","setMainPhoto","currentMain","filter","p","self","deletePhoto","splice","findIndex","fileOverbase","stopPropagation","MessagesComponent","deleteMessage","m","NavComponent","login","removeItem","RegisterComponent","fb","bsConfig","containerClass","createRegisterForm","registerForm","group","username","required","dateOfBirth","city","country","password","minLength","maxLength","confirmPassword","validators","passwordMatchValidator","g","valid","Object","assign","register","emit","cancel","appRoutes","path","canActivate","canDeactivate","redirectTo","pathMatch","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,S;AACX,yBAAoBC,WAApB,EAAsDC,MAAtD,EAA8EC,QAA9E,EAAyG;AAAA;;AAArF,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AAA6B;;;;sCAChG;AACT,cAAI,KAAKF,WAAL,CAAiBG,QAAjB,EAAJ,EAAiC;AAC/B,mBAAO,IAAP;AACD;;AAED,eAAKD,QAAL,CAAcE,KAAd,CAAoB,uBAApB;AACA,eAAKH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBAVUN,S,EAAS,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVO,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,qB;;;;;;;sCAEGC,S,EAAgC;AAC5C,cAAIA,SAAS,CAACC,QAAV,CAAmBC,KAAvB,EAA8B;AAC5B,mBAAOC,OAAO,CAAC,sEAAD,CAAd;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBAPUJ,qB;AAAqB,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB;;;;;sEAArBA,qB,EAAqB;cADjC;AACiC,Q;;;;;;;;;;;;;;;;;;ACJlC;AAAA;;;AAAA;AAAA;AAAA;;QAAaK,W,GAAb;AAAA;;AACS,WAAAC,IAAA,GAAe,EAAf;AACA,WAAAC,OAAA,GAAkB,EAAlB;AACR,K;;;;;;;;;;;;;;;;;ACID;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,e;;;;;;;;;;;;;;;;;;;ACRb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,a;AAKX,6BAAoBC,WAApB,EAAsDhB,MAAtD,EAA8EC,QAA9E,EAAyG;AAAA;;AAArF,aAAAe,WAAA,GAAAA,WAAA;AAAkC,aAAAhB,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AAJ9E,aAAAgB,UAAA,GAAqB,CAArB;AACA,aAAAC,QAAA,GAAmB,CAAnB;AACA,aAAAC,UAAA,GAAa,QAAb;AAE4G;;;;gCAEpGC,K,EAA6B;AAAA;;AACnC,iBAAO,KAAKJ,WAAL,CAAiBK,QAAjB,CAA0B,KAAKJ,UAA/B,EAA2C,KAAKC,QAAhD,EAA0D,IAA1D,EAAgE,KAAKC,UAArE,EAAiFG,IAAjF,CACL,kEAAW,UAAAnB,KAAK,EAAI;AAClBoB,mBAAO,CAACC,GAAR,CAAYrB,KAAZ;;AACA,iBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoB,yBAApB;;AACA,iBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACD,WALD,CADK,CAAP;AAQD;;;;;;;uBAhBUW,a,EAAa,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaU,oB;AAEX,oCAAoBT,WAApB,EAAsDhB,MAAtD,EAA8EC,QAA9E,EAAyG;AAAA;;AAArF,aAAAe,WAAA,GAAAA,WAAA;AAAkC,aAAAhB,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AAA8B;;;;gCAEpGmB,K,EAA6B;AAAA;;AACnC,iBAAO,KAAKJ,WAAL,CAAiBU,OAAjB,CAAyBN,KAAK,CAACO,MAAN,CAAa,IAAb,CAAzB,EAA6CL,IAA7C,CACL,kEAAW,UAAAnB,KAAK,EAAI;AAClB,kBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoB,yBAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,UAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACD,WAJD,CADK,CAAP;AAOD;;;;;;;uBAZUqB,oB,EAAoB,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB;;;;;sEAApBA,oB,EAAoB;cADhC;AACgC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaG,kB;AACX,kCAAoBZ,WAApB,EAAsDjB,WAAtD,EACUC,MADV,EACkCC,QADlC,EAC6D;AAAA;;AADzC,aAAAe,WAAA,GAAAA,WAAA;AAAkC,aAAAjB,WAAA,GAAAA,WAAA;AAC5C,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AAA8B;;;;gCAExDmB,K,EAA6B;AAAA;;AACnC,iBAAO,KAAKJ,WAAL,CAAiBU,OAAjB,CAAyB,KAAK3B,WAAL,CAAiB8B,YAAjB,CAA8BC,MAAvD,EAA+DR,IAA/D,CACL,kEAAW,UAAAnB,KAAK,EAAI;AAClB,kBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoB,8BAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,UAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACD,WAJD,CADK,CAAP;AAOD;;;;;;;uBAZUwB,kB,EAAkB,0H,EAAA,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaG,kB;AAIX,kCAAoBf,WAApB,EAAsDhB,MAAtD,EAA8EC,QAA9E,EAAyG;AAAA;;AAArF,aAAAe,WAAA,GAAAA,WAAA;AAAkC,aAAAhB,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AAH9E,aAAAgB,UAAA,GAAqB,CAArB;AACA,aAAAC,QAAA,GAAmB,CAAnB;AAE4G;;;;gCAEpGE,K,EAA6B;AAAA;;AACnC,iBAAO,KAAKJ,WAAL,CAAiBK,QAAjB,CAA0B,KAAKJ,UAA/B,EAA2C,KAAKC,QAAhD,EAA0DI,IAA1D,CACL,kEAAW,UAAAnB,KAAK,EAAI;AAClBoB,mBAAO,CAACC,GAAR,CAAYrB,KAAZ;;AACA,kBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoB,yBAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACD,WALD,CADK,CAAP;AAQD;;;;;;;uBAfU2B,kB,EAAkB,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,gB;AAKX,gCAAoBhB,WAApB,EAAsDjB,WAAtD,EACUC,MADV,EACkCC,QADlC,EAC6D;AAAA;;AADzC,aAAAe,WAAA,GAAAA,WAAA;AAAkC,aAAAjB,WAAA,GAAAA,WAAA;AAC5C,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AALlC,aAAAgB,UAAA,GAAqB,CAArB;AACA,aAAAC,QAAA,GAAmB,CAAnB;AAIgE;;;;gCAExDE,K,EAA6B;AAAA;;AACnC,iBAAO,KAAKJ,WAAL,CAAiBiB,WAAjB,CAA6B,KAAKlC,WAAL,CAAiB8B,YAAjB,CAA8BC,MAA3D,EACL,KAAKb,UADA,EACY,KAAKC,QADjB,EAC2B,KAAKgB,gBADhC,EACkDZ,IADlD,CAEL,kEAAW,UAAAnB,KAAK,EAAI;AAClBoB,mBAAO,CAACC,GAAR,CAAYrB,KAAZ;;AACA,kBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoB,6BAApB;;AACA,kBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,mBAAO,gDAAG,IAAH,CAAP;AACD,WALD,CAFK,CAAP;AASD;;;;;;;uBAlBU4B,gB,EAAgB,0H,EAAA,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAMaG,e;AAEX,iCAAc;AAAA;AAAG;;;;gCAETC,O,EAAiBC,U,EAAwB;AAC/C,6DAAiBD,OAAjB,EAA0B,UAAC7C,CAAD,EAAY;AACpC,gBAAIA,CAAJ,EAAO;AACL8C,wBAAU,CAAC9C,CAAD,CAAV;AACD,aAFD,MAEO,CAAE;AACV,WAJD;AAKD;;;gCAEO6C,O,EAAiB;AACvB,6DAAiBA,OAAjB;AACD;;;8BAEKA,O,EAAiB;AACrB,2DAAeA,OAAf;AACD;;;gCAEOA,O,EAAiB;AACvB,6DAAiBA,OAAjB;AACD;;;gCAEOA,Q,EAAiB;AACvB,6DAAiBA,QAAjB;AACD;;;;;;;uBA1BUD,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV9B,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaiC,W;AAQX,2BAAoBC,IAApB,EAA8CtC,QAA9C,EAAyE;AAAA;;AAArD,aAAAsC,IAAA,GAAAA,IAAA;AAA0B,aAAAtC,QAAA,GAAAA,QAAA;AAP9C,aAAAuC,OAAA,GAAU,sEAAYC,MAAZ,GAAqB,OAA/B;AACA,aAAAC,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAGA,aAAAC,QAAA,GAAW,IAAI,oDAAJ,CAA4B,uBAA5B,CAAX;AACA,aAAAC,eAAA,GAAkB,KAAKD,QAAL,CAAcE,YAAd,EAAlB;AAE4E;;;;0CAE1DF,Q,EAAkB;AAClC,eAAKA,QAAL,CAAcG,IAAd,CAAmBH,QAAnB;AACD;;;8BAEKI,K,EAAY;AAAA;;AAChB,iBAAO,KAAKR,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,OAA9B,EAAuCO,KAAvC,EAA8CzB,IAA9C,CACL,2DAAI,UAAC2B,QAAD,EAAmB;AACrB,gBAAMrC,IAAI,GAAGqC,QAAb;;AACA,gBAAIrC,IAAJ,EAAU;AACRsC,0BAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BvC,IAAI,CAACwC,KAAnC;AACAF,0BAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAe1C,IAAI,CAACA,IAApB,CAA7B;AACA,oBAAI,CAACiB,YAAL,GAAoB,MAAI,CAACa,SAAL,CAAea,WAAf,CAA2B3C,IAAI,CAACwC,KAAhC,CAApB;AACA,oBAAI,CAACI,WAAL,GAAmB5C,IAAI,CAACA,IAAxB;;AACA,oBAAI,CAAC6C,iBAAL,CAAuB,MAAI,CAACD,WAAL,CAAiBb,QAAxC;AACD;AACF,WATD,CADK,CAAP;AAYD;;;iCAEQ/B,I,EAAY;AACnB,iBAAO,KAAK2B,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,UAA9B,EAA0C5B,IAA1C,CAAP;AACD;;;mCAEU;AACT,cAAMwC,KAAK,GAAGF,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAd;AACA,iBAAO,CAAC,KAAKhB,SAAL,CAAeiB,cAAf,CAA8BP,KAA9B,CAAR;AACD;;;;;;;uBApCUd,W,EAAW,uH,EAAA,yH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVjC,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECZgC;;;QAQ3CuD,W;AAUX,2BAAoBrB,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AARZ,aAAAsB,UAAA,GAAkB,IAAI,uEAAJ,GAAmCC,OAAnC,CAA2C,oCAA3C,EAAmF;AAAnF,SACvBC,gBADuB,CACN,4DAAiBC,WADX,EAEvBC,KAFuB,EAAlB;AAGC,aAAAC,QAAA,GAAW,uCAAX;AAED,aAAAC,qBAAA,GAAqC,IAAI,+DAAJ,EAArC;AACA,aAAAC,SAAA,GAAY,IAAI,4CAAJ,EAAZ;AAGN,aAAKP,UAAL,CAAgBQ,OAAhB,CAAwB;AAAA,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,2BAAM,KAAKC,KAAL,EAAN;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ;AAAA,SAAxB;AAGA,aAAKT,UAAL,CAAgBU,EAAhB,CAAmB,YAAnB,EAAiC,UAAC3D,IAAD,EAAOwB,OAAP,EAAmB;AAAE,gBAAI,CAACoC,kBAAL,CAAwB5D,IAAxB,EAA8BwB,OAA9B;AAAyC,SAA/F;AACA,aAAKkC,KAAL;AACD,O,CAGD;;;;;gCACqB;;;;;;;;;;AAEjB,2BAAM,KAAKT,UAAL,CAAgBS,KAAhB,EAAN;;;AACA/C,2BAAO,CAACC,GAAR,CAAY,WAAZ;;;;;;;AAEAD,2BAAO,CAACC,GAAR;AACAiD,8BAAU,CAAC;AAAA,6BAAM,MAAI,CAACH,KAAL,EAAN;AAAA,qBAAD,EAAqB,IAArB,CAAV;;;;;;;;;AAEH;;;2CAE0B1D,I,EAAcwB,O,EAAe;AACtD,eAAK+B,qBAAL,CAA2BvD,IAA3B,GAAkCA,IAAlC;AACA,eAAKuD,qBAAL,CAA2BtD,OAA3B,GAAqCuB,OAArC;AACA,eAAKgC,SAAL,CAAetB,IAAf,CAAoB,KAAKqB,qBAAzB;AACD;AAED;AAEA;;;;yCACwBO,M,EAAa;AACnC,eAAKnC,IAAL,CAAUS,IAAV,CAAe,KAAKkB,QAApB,EAA8BQ,MAA9B,EAAsCC,SAAtC,CAAgD,UAAAC,IAAI;AAAA,mBAAIrD,OAAO,CAACC,GAAR,CAAYoD,IAAZ,CAAJ;AAAA,WAApD,EADmC,CAEnC;AACD;;;+CAE0B;AACzB,iBAAO,KAAKR,SAAL,CAAevB,YAAf,EAAP;AACD;;;;;;;uBA9CUe,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVvD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaawE,gB;;;;;;;kCAET1F,G,EACA2D,I,EAAiB;AAEjB,iBAAOA,IAAI,CAACgC,MAAL,CAAY3F,GAAZ,EAAiBmC,IAAjB,CACL,kEAAW,UAAAnB,KAAK,EAAI;AAClB,gBAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC,kBAAIA,KAAK,CAAC4E,MAAN,KAAiB,GAArB,EAA0B;AACxB,uBAAO,wDAAW5E,KAAK,CAAC6E,UAAjB,CAAP;AACD;;AACD,kBAAMC,gBAAgB,GAAG9E,KAAK,CAAC+E,OAAN,CAAcC,GAAd,CAAkB,mBAAlB,CAAzB;;AACA,kBAAIF,gBAAJ,EAAsB;AACpB,uBAAO,wDAAWA,gBAAX,CAAP;AACD;;AACD,kBAAMG,WAAW,GAAGjF,KAAK,CAACA,KAA1B;AACA,kBAAIkF,gBAAgB,GAAG,EAAvB;;AACA,kBAAID,WAAW,CAACE,MAAZ,IAAsB,OAAOF,WAAW,CAACE,MAAnB,KAA8B,QAAxD,EAAkE;AAChE,qBAAK,IAAMC,GAAX,IAAkBH,WAAW,CAACE,MAA9B,EAAsC;AACpC,sBAAIF,WAAW,CAACE,MAAZ,CAAmBC,GAAnB,CAAJ,EAA6B;AAC3BF,oCAAgB,IAAID,WAAW,CAACE,MAAZ,CAAmBC,GAAnB,IAA0B,IAA9C;AACD;AACF;AACF;;AACD,qBAAO,wDAAWF,gBAAgB,IAAID,WAApB,IAAmC,cAA9C,CAAP;AACD;AACF,WApBD,CADK,CAAP;AAuBD;;;;;;;uBA5BUP,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;AA+BtB,QAAMW,wBAAwB,GAAG;AACtCC,aAAO,EAAE,sEAD6B;AAEtCC,cAAQ,EAAEb,gBAF4B;AAGtCc,WAAK,EAAE;AAH+B,KAAjC;;;;;;;;;;;;;;;;AC5CP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,W;AAEX,2BAAoBrD,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADpB,aAAAC,OAAA,GAAU,sEAAYC,MAAtB;AACyC;;;;iCAEhCoD,I,EAAOC,Y,EAAeC,U,EAAa5E,U,EAAW;AACrD,cAAM6E,eAAe,GAA4B,IAAI,kEAAJ,EAAjD;AAEA,cAAIrE,MAAM,GAAG,IAAI,+DAAJ,EAAb;;AAEA,cAAIkE,IAAI,IAAI,IAAR,IAAgBC,YAAY,IAAI,IAApC,EAA0C;AACxCnE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,YAAd,EAA4BJ,IAA5B,CAAT;AACAlE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,UAAd,EAA0BH,YAA1B,CAAT;AACD;;AAED,cAAIC,UAAU,IAAI,IAAlB,EAAwB;AACtBpE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,QAAd,EAAwBF,UAAU,CAACG,MAAnC,CAAT;AACAvE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,QAAd,EAAwBF,UAAU,CAACI,MAAnC,CAAT;AACAxE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,QAAd,EAAwBF,UAAU,CAACK,MAAnC,CAAT;AACAzE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,SAAd,EAAyBF,UAAU,CAACM,OAApC,CAAT;AACD;;AACD,cAAIlF,UAAU,KAAK,QAAnB,EAA6B;AAC3BQ,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,QAAd,EAAwB,MAAxB,CAAT;AACD;;AACD,cAAI9E,UAAU,KAAK,QAAnB,EAA6B;AAC3BQ,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,QAAd,EAAwB,MAAxB,CAAT;AACD;;AAED,iBAAO,KAAK1D,IAAL,CAAU4C,GAAV,CAAsB,KAAK3C,OAAL,GAAe,OAArC,EAA8C;AAAE8D,mBAAO,EAAE,UAAX;AAAuB3E,kBAAM,EAANA;AAAvB,WAA9C,EACJL,IADI,CAEH,2DAAI,UAAA2B,QAAQ,EAAI;AACd+C,2BAAe,CAACO,MAAhB,GAAyBtD,QAAQ,CAACuD,IAAlC;;AACA,gBAAIvD,QAAQ,CAACiC,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,KAAsC,IAA1C,EAAgD;AAC9Ca,6BAAe,CAACS,UAAhB,GAA6BpD,IAAI,CAACqD,KAAL,CAAWzD,QAAQ,CAACiC,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,CAAX,CAA7B;AACD;;AACD,mBAAOa,eAAP;AACD,WAND,CAFG,CAAP;AASD;;;gCAEOnG,E,EAAE;AACR,iBAAO,KAAK0C,IAAL,CAAU4C,GAAV,CAAoB,KAAK3C,OAAL,GAAe,QAAf,GAA0B3C,EAA9C,CAAP;AACD;;;mCAEUA,E,EAAYe,I,EAAY;AACjC,iBAAO,KAAK2B,IAAL,CAAUoE,GAAV,CAAc,KAAKnE,OAAL,GAAe,QAAf,GAA0B3C,EAAxC,EAA4Ce,IAA5C,CAAP;AACD;;;qCAEYgG,M,EAAgB/G,E,EAAY;AACvC,iBAAO,KAAK0C,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BoE,MAA1B,GAAmC,UAAnC,GAAgD/G,EAAhD,GAAqD,UAApE,EAAgF,EAAhF,CAAP;AACD;;;oCAEW+G,M,EAAgB/G,E,EAAY;AACtC,iBAAO,KAAK0C,IAAL,WAAiB,KAAKC,OAAL,GAAe,QAAf,GAA0BoE,MAA1B,GAAmC,UAAnC,GAAgD/G,EAAjE,CAAP;AACD;;;iCAEQA,E,EAAYgH,W,EAAqB;AACxC,iBAAO,KAAKtE,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0B3C,EAA1B,GAA+B,QAA/B,GAA0CgH,WAAzD,EAAsE,EAAtE,CAAP;AACD;;;oCAEWhH,E,EAAYgG,I,EAAOC,Y,EAAe5D,gB,EAAmB;AAC/D,cAAM8D,eAAe,GAA+B,IAAI,kEAAJ,EAApD;AAEA,cAAIrE,MAAM,GAAG,IAAI,+DAAJ,EAAb;AACAA,gBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,kBAAd,EAAkC/D,gBAAlC,CAAT;;AAEA,cAAI2D,IAAI,IAAI,IAAR,IAAgBC,YAAY,IAAI,IAApC,EAA0C;AACxCnE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,YAAd,EAA4BJ,IAA5B,CAAT;AACAlE,kBAAM,GAAGA,MAAM,CAACsE,MAAP,CAAc,UAAd,EAA0BH,YAA1B,CAAT;AAEA,mBAAO,KAAKvD,IAAL,CAAU4C,GAAV,CAAyB,KAAK3C,OAAL,GAAe,QAAf,GAA0B3C,EAA1B,GAA+B,WAAxD,EAAqE;AAAEyG,qBAAO,EAAE,UAAX;AAAuB3E,oBAAM,EAANA;AAAvB,aAArE,EACJL,IADI,CAEH,2DAAI,UAAA2B,QAAQ,EAAI;AACd+C,6BAAe,CAACO,MAAhB,GAAyBtD,QAAQ,CAACuD,IAAlC;;AACA,kBAAIvD,QAAQ,CAACiC,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,MAAuC,IAA3C,EAAiD;AAC/Ca,+BAAe,CAACS,UAAhB,GAA6BpD,IAAI,CAACqD,KAAL,CAAWzD,QAAQ,CAACiC,OAAT,CAAiBC,GAAjB,CAAqB,YAArB,CAAX,CAA7B;AACD;;AACD,qBAAOa,eAAP;AACD,aAND,CAFG,CAAP;AAUD;AACF;;;yCAEgBnG,E,EAAYgH,W,EAAqB;AAChD,iBAAO,KAAKtE,IAAL,CAAU4C,GAAV,CAAyB,KAAK3C,OAAL,GAAe,QAAf,GAA0B3C,EAA1B,GAA+B,mBAA/B,GAAqDgH,WAA9E,CAAP;AACD;;;oCAEWhH,E,EAAYuC,O,EAAkB;AACxC,iBAAO,KAAKG,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0B3C,EAA1B,GAA+B,WAA9C,EAA2DuC,OAA3D,CAAP;AACD;;;sCAEavC,E,EAAY+G,M,EAAgB;AACxC,iBAAO,KAAKrE,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BoE,MAA1B,GAAmC,YAAnC,GAAkD/G,EAAjE,EAAqE,EAArE,CAAP;AACD;;;mCAEU+G,M,EAAgBE,S,EAAmB;AAC5C,eAAKvE,IAAL,CAAUS,IAAV,CAAe,KAAKR,OAAL,GAAe,QAAf,GAA0BoE,MAA1B,GAAmC,YAAnC,GAAkDE,SAAlD,GAA8D,OAA7E,EAAsF,EAAtF,EAA0FnC,SAA1F;AACD;;;;;;;uBA/FUiB,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVvF,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa0G,Y;AAGX,4BAAoBhH,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAFpB,aAAA2C,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAEiD;;;;mCAEtC;AACT,cAAMU,KAAK,GAAGF,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAd;AACA,cAAM9C,IAAI,GAASyC,IAAI,CAACqD,KAAL,CAAWxD,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAnB;;AACA,cAAIN,KAAJ,EAAW;AACT,iBAAKrD,WAAL,CAAiB8B,YAAjB,GAAgC,KAAKa,SAAL,CAAea,WAAf,CAA2BH,KAA3B,CAAhC;AACD;;AACD,cAAIxC,IAAJ,EAAU;AACR,iBAAKb,WAAL,CAAiByD,WAAjB,GAA+B5C,IAA/B;AACA,iBAAKb,WAAL,CAAiB0D,iBAAjB,CAAmC7C,IAAI,CAAC+B,QAAxC;AACD;AACF;;;;;;;uBAfUoE,Y,EAAY,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACTvB;;AACA;;;;;;;;;sEDQWA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AEVzyCO,aAASC,WAAT,GAAuB;AAC5B,aAAOjE,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAP;AACD;;QAqDY0D,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAZT,CACT,mEADS,EAET,qFAFS,EAGT,uFAHS,EAIT,mFAJS,EAKT,mFALS,EAMT,wEANS,EAOT,8EAPS,EAQT,4FARS,C;AASV,gBAhCQ,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,4FALO,EAMP,wEAAiBC,OAAjB,EANO,EAOP,8DAAWA,OAAX,EAPO,EAQP,6DAAaA,OAAb,CAAqB,kDAArB,CARO,EASP,4EAAmBA,OAAnB,EATO,EAUP,2DAAcA,OAAd,EAVO,EAWP,2EAAiBA,OAAjB,EAXO,EAYP,qEAAcA,OAAd,EAZO,EAaP,+DAbO,EAcP,iEAdO,EAeP,6DAAUA,OAAV,CAAkB;AAChBC,cAAM,EAAE;AACNH,qBAAW,EAAEA,WADP;AAENI,4BAAkB,EAAE,CAAC,gBAAD,CAFd;AAGNC,2BAAiB,EAAE,CAAC,yBAAD;AAHb;AADQ,OAAlB,CAfO,CAgCR;;;;0HAGUJ,S,EAAS;AAAA,uBAjDlB,4DAiDkB,EAhDlB,gEAgDkB,EA/ClB,+EA+CkB,EA9ClB,mEA8CkB,EA7ClB,+FA6CkB,EA5ClB,sEA4CkB,EA3ClB,+EA2CkB,EA1ClB,+FA0CkB,EAzClB,qGAyCkB,EAxClB,+FAwCkB,EAvClB,kGAuCkB,EAtClB,2GAsCkB,EArClB,mEAqCkB;AArCL,kBAGb,uEAHa,EAIb,qEAJa,EAKb,0DALa,EAMb,kEANa,EAOb,4FAPa,EAOU,uEAPV,EAOU,6DAPV,EAOU,4DAPV,EAOU,2EAPV,EAOU,0DAPV,EAOU,0EAPV,EAOU,oEAPV,EAeb,+DAfa,EAgBb,iEAhBa,EAgBG,4DAhBH;AAqCK,O;AArBF,K;;;;;sEAqBPA,S,EAAS;cAnDrB,sDAmDqB;eAnDZ;AACRK,sBAAY,EAAE,CACZ,4DADY,EAEZ,gEAFY,EAGZ,+EAHY,EAIZ,mEAJY,EAKZ,+FALY,EAMZ,sEANY,EAOZ,+EAPY,EAQZ,+FARY,EASZ,qGATY,EAUZ,+FAVY,EAWZ,kGAXY,EAYZ,2GAZY,EAaZ,mEAbY,CADN;AAgBRC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,4FALO,EAMP,wEAAiBL,OAAjB,EANO,EAOP,8DAAWA,OAAX,EAPO,EAQP,6DAAaA,OAAb,CAAqB,kDAArB,CARO,EASP,4EAAmBA,OAAnB,EATO,EAUP,2DAAcA,OAAd,EAVO,EAWP,2EAAiBA,OAAjB,EAXO,EAYP,qEAAcA,OAAd,EAZO,EAaP,+DAbO,EAcP,iEAdO,EAeP,6DAAUA,OAAV,CAAkB;AAChBC,kBAAM,EAAE;AACNH,yBAAW,EAAEA,WADP;AAENI,gCAAkB,EAAE,CAAC,gBAAD,CAFd;AAGNC,+BAAiB,EAAE,CAAC,yBAAD;AAHb;AADQ,WAAlB,CAfO,CAhBD;AAuCRG,mBAAS,EAAE,CACT,mEADS,EAET,qFAFS,EAGT,uFAHS,EAIT,mFAJS,EAKT,mFALS,EAMT,wEANS,EAOT,8EAPS,EAQT,4FARS,CAvCH;AAiDRC,mBAAS,EAAE,CAAC,4DAAD;AAjDH,S;AAmDY,Q;;;;;;;;;;;;;;;;;;AChGtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOM;;AAAmG;;AAAe;;AAAM;;AAA+B;;AAAgB;;AAAO;;;;;;;;AAAvI;;AAA4D;;AAAA;;AAAoD;;AAAA;;;;QDEhJC,a;AAEX,6BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAOpB,aAAApD,MAAA,GAAsB,IAAI,+DAAJ,EAAtB;AACA,aAAAqD,aAAA,GAA+B,EAA/B;AARiD;;;;mCAEzC;AAAA;;AACN,eAAKD,WAAL,CAAiBE,oBAAjB,GAAwCrD,SAAxC,CAAkD,UAACsD,WAAD,EAA8B;AAAE,kBAAI,CAACC,UAAL,CAAgBD,WAAhB;AAA+B,WAAjH,EADM,CAC+G;AAEtH;;;+BAKG;AACF,cAAI,KAAKvD,MAAT,EAAiB;AACf,gBAAI,KAAKA,MAAL,CAAY9D,IAAZ,CAAiBuH,MAAjB,IAA2B,CAA3B,IAAgC,KAAKzD,MAAL,CAAY9D,IAAZ,CAAiBuH,MAAjB,IAA2B,CAA/D,EAAkE;AAChEC,oBAAM,CAACC,KAAP,CAAa,2BAAb;AACA;AACD,aAHD,MAGO;AACL,mBAAKP,WAAL,CAAiBQ,gBAAjB,CAAkC,KAAK5D,MAAvC,EADK,CAC6D;AACnE;AACF;AACF;;;mCAEU6D,G,EAAkB;AAC3B,cAAIC,MAAM,GAAG,IAAI,+DAAJ,EAAb;AACAA,gBAAM,CAAC5H,IAAP,GAAc2H,GAAG,CAAC3H,IAAlB;AACA4H,gBAAM,CAAC3H,OAAP,GAAiB0H,GAAG,CAAC1H,OAArB;AACA,eAAKkH,aAAL,CAAmBU,IAAnB,CAAwBD,MAAxB;AAED;;;;;;;uBA7BUX,a,EAAa,mI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,mb;AAAA;AAAA;ACR1B;;AACE;;AAAwB;;AAAW;;AACrC;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAqE;AAAA;AAAA;;AAArE;;AACA;;AAAyB;AAAA,mBAAS,IAAAa,IAAA,EAAT;AAAe,WAAf;;AAAiB;;AAAiC;;AAC7E;;AACA;;AAA4D;AAAA;AAAA;;AAA5D;;AACF;;;;AARU;;AAAA;;AAI+D;;AAAA;;AAGX;;AAAA;;;;;;;;;sEDLjDb,a,EAAa;cALzB,uDAKyB;eALf;AACTb,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGE;;AACE;;AAAI;;AAAe;;AACnB;;AAAgB;;AAAiE;;AACjF;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAQ;;AAC/E;;AAAoC;;AAAU;;AAChD;;AACF;;;;;;;;AAEA;;AACE;;AACE;;AACE;;AAAc;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAC9D;;AACF;;AACF;;;;QDVWyB,a;AAEX,6BAAoBpG,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADpB,aAAAqG,YAAA,GAAoB,KAApB;AACyC;;;;mCAEjC,CACP;;;yCAEgB;AACf,eAAKA,YAAL,GAAoB,IAApB;AACD;;;2CAEkBC,c,EAAyB;AAC1C,eAAKD,YAAL,GAAoBC,cAApB;AACD;;;;;;;uBAbUF,a,EAAa,gI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,6W;AAAA;AAAA;ACN1B;;AACE;;AASA;;AAOF;;;;AAhBO;;AAAA;;AASA;;AAAA;;;;;;;;;sEDJMA,a,EAAa;cALzB,uDAKyB;eALf;AACT3B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBI;;AACE;;AACF;;;;;;AADmB;;AAAA;;;;QDLV4B,c;AAKX,8BAAoB/I,WAApB,EAAsDiB,WAAtD,EAAwFI,KAAxF,EAAuHnB,QAAvH,EAAkJ;AAAA;;AAA9H,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAiB,WAAA,GAAAA,WAAA;AAAkC,aAAAI,KAAA,GAAAA,KAAA;AAA+B,aAAAnB,QAAA,GAAAA,QAAA;AAA8B;;;;mCAE7I;AAAA;;AACN,eAAKmB,KAAL,CAAWwD,IAAX,CAAgBD,SAAhB,CAA0B,UAAAC,IAAI,EAAI;AAChC,mBAAI,CAACmE,KAAL,GAAanE,IAAI,CAAC,OAAD,CAAJ,CAAc2B,MAA3B;AACA,mBAAI,CAACE,UAAL,GAAkB7B,IAAI,CAAC,OAAD,CAAJ,CAAc6B,UAAhC;AACD,WAHD;AAIA,eAAKtF,UAAL,GAAkB,QAAlB;AACD;;;oCAEW6H,K,EAAU;AACpB,eAAKvC,UAAL,CAAgBwC,WAAhB,GAA8BD,KAAK,CAACnD,IAApC;AACA,eAAKqD,SAAL;AACD;;;oCAEW;AAAA;;AACV,eAAKlI,WAAL,CAAiBK,QAAjB,CAA0B,KAAKoF,UAAL,CAAgBwC,WAA1C,EAAuD,KAAKxC,UAAL,CAAgBX,YAAvE,EAAqF,IAArF,EAA2F,KAAK3E,UAAhG,EACGwD,SADH,CACa,UAACwE,GAAD,EAAkC;AAC3C,mBAAI,CAACJ,KAAL,GAAaI,GAAG,CAAC5C,MAAjB;AACA,mBAAI,CAACE,UAAL,GAAkB0C,GAAG,CAAC1C,UAAtB;AACD,WAJH,EAIK,UAAAtG,KAAK,EAAI;AACV,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACD,WANH;AAOD;;;;;;;uBA5BU2I,c,EAAc,mI,EAAA,mI,EAAA,+H,EAAA,2I;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,goB;AAAA;AAAA;ACZ3B;;AACE;;AAAI;;AAA2G;;AACjH;;AAEA;;AAEE;;AACE;;AACE;;AAAgC;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAA4B,IAAAI,SAAA,EAA5B;AAAuC,WAA/D;;AAAiE;;AAAmB;;AACpH;;AAAgC;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAA4B,IAAAA,SAAA,EAA5B;AAAuC,WAA/D;;AAAiE;;AAAkB;;AACrH;;AACF;;AAEA;;AAEA;;AACE;;AAGF;;AACF;;AAEA;;AACE;;AAAiH;AAAA;AAAA,aAAoC,aAApC,EAAoC;AAAA,mBAC1H,IAAAE,WAAA,QAD0H;AACvG,WADmE;;AAGjH;;AACF;;;;AA1BM;;AAAA;;AAOgC;;AAAA;;AACA;;AAAA;;AAO7B;;AAAA;;AAOK;;AAAA,0FAAsB,YAAtB,EAAsB,yBAAtB,EAAsB,cAAtB,EAAsB,2BAAtB,EAAsB,SAAtB,EAAsB,0BAAtB;;;;;;;;;sEDXDN,c,EAAc;cAL1B,uDAK0B;eALhB;AACT9B,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;QAWamC,mB;AAGX,mCAAoBtJ,WAApB,EAAsDiB,WAAtD,EAAwFf,QAAxF,EAAmH;AAAA;;AAA/F,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAiB,WAAA,GAAAA,WAAA;AAAkC,aAAAf,QAAA,GAAAA,QAAA;AAA8B;;;;mCAE9G,CACP;;;iCAEQJ,E,EAAY;AAAA;;AACnB,eAAKmB,WAAL,CAAiBsI,QAAjB,CAA0B,KAAKvJ,WAAL,CAAiB8B,YAAjB,CAA8BC,MAAxD,EAAgEjC,EAAhE,EAAoE8E,SAApE,CAA8E,UAAAC,IAAI,EAAI;AACpF,mBAAI,CAAC3E,QAAL,CAAcsJ,OAAd,CAAsB,qBAAqB,OAAI,CAAC3I,IAAL,CAAU4I,OAArD;AACD,WAFD,EAEG,UAAArJ,KAAK,EAAI;AACV,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACD,WAJD;AAKD;;;;;;;uBAdUkJ,mB,EAAmB,mI,EAAA,mI,EAAA,2I;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,ggB;AAAA;AAAA;ACVhC;;AACE;;AACE;;AACA;;AACE;;AAA6B;;AAAsE;;AAA0B;;AAAS;;AACtI;;AAA6B;;AAAgC;AAAA,mBAAS,IAAAC,QAAA,aAAT;AAA0B,WAA1B;;AAA4B;;AAA2B;;AAAS;;AAC7H;;AAA6B;;AAA+F;;AAA8B;;AAAS;;AACrK;;AACF;;AACA;;AACE;;AAAwC;;AAA0B;;AAA8B;;AAChG;;AAA4C;;AAAa;;AAC3D;;AACF;;;;AAX8B;;AAAA;;AAAsD;;AAEjB;;AAAA;;AAEA;;AAAA,sKAAqC,aAArC,EAAqC,sEAArC;;AAIG;;AAAA;;AACtB;;AAAA;;;;;;;;;sEDDnCD,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTrC,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;gBAC7B;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAcauC,qB;AAMX,qCAAoBzI,WAApB,EAAsDf,QAAtD,EAAyFmB,KAAzF,EAAgH;AAAA;;AAA5F,aAAAJ,WAAA,GAAAA,WAAA;AAAkC,aAAAf,QAAA,GAAAA,QAAA;AAAmC,aAAAmB,KAAA,GAAAA,KAAA;AAA0B;;;;mCAE3G;AAAA;;AACN,eAAKA,KAAL,CAAWwD,IAAX,CAAgBD,SAAhB,CAA0B,UAAAC,IAAI,EAAI;AAChC,mBAAI,CAAChE,IAAL,GAAYgE,IAAI,CAAC,MAAD,CAAhB;AACD,WAFD;AAIA,eAAKxD,KAAL,CAAWsI,WAAX,CAAuB/E,SAAvB,CAAiC,UAAAhD,MAAM,EAAI;AACzC,gBAAMgI,WAAW,GAAGhI,MAAM,CAAC,KAAD,CAA1B;AACA,mBAAI,CAACiI,UAAL,CAAgBC,IAAhB,CAAqBF,WAAW,GAAG,CAAd,GAAkBA,WAAlB,GAAgC,CAArD,EAAwDG,MAAxD,GAAiE,IAAjE;AACD,WAHD;AAKA,eAAKC,cAAL,GAAsB,CACpB;AACEC,iBAAK,EAAE,OADT;AAEEC,kBAAM,EAAE,OAFV;AAGEC,wBAAY,EAAE,GAHhB;AAIEC,6BAAiB,EAAE,CAJrB;AAKEC,0BAAc,EAAE,kEAAoBC,KALtC;AAMEC,mBAAO,EAAE;AANX,WADoB,CAAtB;AAUA,eAAKC,aAAL,GAAqB,KAAKC,SAAL,EAArB;AACD;;;oCAEW;AACV,cAAMC,SAAS,GAAG,EAAlB;;AADU,qDAEU,KAAK7J,IAAL,CAAU8J,MAFpB;AAAA;;AAAA;AAEV,gEAAsC;AAAA,kBAA3BC,KAA2B;AACpCF,uBAAS,CAAChC,IAAV,CAAe;AACbmC,qBAAK,EAAED,KAAK,CAACE,GADA;AAEbC,sBAAM,EAAEH,KAAK,CAACE,GAFD;AAGbE,mBAAG,EAAEJ,KAAK,CAACE,GAHE;AAIbG,0BAAU,EAAEL,KAAK,CAACM;AAJL,eAAf;AAMD;AATS;AAAA;AAAA;AAAA;AAAA;;AAUV,iBAAOR,SAAP;AACD;;;kCAESS,K,EAAe;AACvB,eAAKtB,UAAL,CAAgBC,IAAhB,CAAqBqB,KAArB,EAA4BpB,MAA5B,GAAqC,IAArC;AACD;;;;;;;uBA9CUL,qB,EAAqB,mI,EAAA,2I,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;;;;;;;;;;;;;;;ACdlC;;AACE;;AACE;;AACE;;AAAI;;AAA0B;;AAChC;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AACE;;AAAQ;;AAAS;;AACjB;;AAAG;;AAA+B;;AAClC;;AACE;;AAAQ;;AAAI;;AACZ;;AAAG;;AAAY;;AACjB;;AACA;;AACE;;AAAQ;;AAAY;;AACpB;;AAAG;;;;AAA8B;;AACnC;;AACA;;AACE;;AAAQ;;AAAa;;AACrB;;AAAG;;;;AAAqC;;AAC1C;;AACF;;AACA;;AACE;;AACE;;AAAsC;;AAAI;;AAC1C;;AAAsC;AAAA,mBAAS,IAAA0B,SAAA,CAAU,CAAV,CAAT;AAAqB,WAArB;;AAAuB;;AAAO;;AACtE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAW;;AACf;;AAAG;;AAAqB;;AACxB;;AAAI;;AAAW;;AACf;;AAAG;;AAAmB;;AACxB;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AAAG;;AAAkB;;AACvB;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAzDU;;AAAA;;AAMsC;;AAAA;;AAAwB;;AAG3D;;AAAA;;AAGE;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAcA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAIA;;AAAA;;AAGU;;AAAA,kGAA0B,QAA1B,EAA0B,iBAA1B;;AAGQ;;AAAA;;;;;;;;;;sEDrCpB1B,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTzC,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;gBAC/B,uD;iBAAU,Y,EAAc;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEf3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOM;;AACE;;AAAQ;;AAAY;;AAAS;;AAC/B;;;;QDKOkE,mB;AAWX,mCAAoBhK,KAApB,EAAmDnB,QAAnD,EAAsFe,WAAtF,EAAwHjB,WAAxH,EAAkJ;AAAA;;AAA9H,aAAAqB,KAAA,GAAAA,KAAA;AAA+B,aAAAnB,QAAA,GAAAA,QAAA;AAAmC,aAAAe,WAAA,GAAAA,WAAA;AAAkC,aAAAjB,WAAA,GAAAA,WAAA;AAA6B;;;;2CANlIsL,M,EAAa;AAC9B,cAAI,KAAK7K,QAAL,CAAcC,KAAlB,EAAyB;AACvB4K,kBAAM,CAACC,WAAP,GAAqB,IAArB;AACD;AACF;;;mCAIO;AAAA;;AACN,eAAKlK,KAAL,CAAWwD,IAAX,CAAgBD,SAAhB,CAA0B,UAAAC,IAAI,EAAI;AAChC,mBAAI,CAAChE,IAAL,GAAYgE,IAAI,CAAC,MAAD,CAAhB;AACD,WAFD;AAGA,eAAK7E,WAAL,CAAiB6C,eAAjB,CAAiC+B,SAAjC,CAA2C,UAAAhC,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WAAnD;AACD;;;qCAEY;AAAA;;AACX,eAAK3B,WAAL,CAAiBuK,UAAjB,CAA4B,KAAKxL,WAAL,CAAiB8B,YAAjB,CAA8BC,MAA1D,EAAkE,KAAKlB,IAAvE,EAA6E+D,SAA7E,CAAuF,UAAA7B,IAAI,EAAI;AAC7F,mBAAI,CAAC7C,QAAL,CAAcsJ,OAAd,CAAsB,8BAAtB;;AACA,mBAAI,CAAC/I,QAAL,CAAcgL,KAAd,CAAoB,OAAI,CAAC5K,IAAzB;AACD,WAHD,EAGG,UAAAT,KAAK,EAAI;AACR,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACH,WALD;AAMD;;;wCAEewC,Q,EAAU;AACxB,eAAK/B,IAAL,CAAU+B,QAAV,GAAqBA,QAArB;AACD;;;;;;;uBA/BUyI,mB,EAAmB,+H,EAAA,2I,EAAA,mI,EAAA,mI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;;;;;;;;;;;;;mBAAnB,8B;AAA0B,W,EAAA,K,EAAA,6D;;;;;;;;ACbvC;;AACE;;AACE;;AACE;;AAAI;;AAAY;;AAClB;;AACA;;AACE;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AACE;;AAAQ;;AAAS;;AACjB;;AAAG;;AAA+B;;AAClC;;AACE;;AAAQ;;AAAI;;AACZ;;AAAG;;AAAY;;AACjB;;AACA;;AACE;;AAAQ;;AAAY;;AACpB;;AAAG;;;;AAA8B;;AACnC;;AACA;;AACE;;AAAQ;;AAAa;;AACrB;;AAAG;;;;AAAqC;;AAC1C;;AACF;;AACA;;AACE;;AAAuE;AAAA,mBAAS,IAAAG,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAY;;AAC5G;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAyB;AAAA,mBAAY,IAAAA,UAAA,EAAZ;AAAwB,WAAxB;;AACvB;;AAAI;;AAAW;;AACf;;AAA4D;AAAA;AAAA;;AAAgC;;AAC5F;;AAAI;;AAAW;;AACf;;AAA0D;AAAA;AAAA;;AAA8B;;AACxF;;AAAI;;AAAS;;AACb;;AAAyD;AAAA;AAAA;;AAA6B;;AACtF;;AAAI;;AAAiB;;AACrB;;AACE;;AAAkB;;AAAI;;AACtB;;AAAoD;AAAA;AAAA;;AAApD;;AACA;;AAAqB;;AAAO;;AAC5B;;AAAuD;AAAA;AAAA;;AAAvD;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAyC;AAAA,mBAAwB,IAAAE,eAAA,QAAxB;AAA+C,WAA/C;;AAAiD;;AAC5F;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAzDW;;AAAA;;AAQqC;;AAAA;;AAA8C;;AAGjF;;AAAA;;AAGE;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIG;;AAAA;;AAUwD;;AAAA;;AAEF;;AAAA;;AAED;;AAAA;;AAIH;;AAAA;;AAEG;;AAAA;;AAKzC;;AAAA;;;;;;;;;;sED5CjBL,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTpE,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;gBAC7B,uD;iBAAU,U;;;gBAGV,0D;iBAAa,qB,EAAuB,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;AElBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBQ;;AACE;;AACF;;;;;;AAF0C;;AACxC;;AAAA;;;;;;AAmBN;;AACE;;AACF;;;;;;AADmB;;AAAA;;;;QDjCVwE,mB;AAOX,mCAAoB1K,WAApB,EAAsDf,QAAtD,EAAyFmB,KAAzF,EAAgH;AAAA;;AAA5F,aAAAJ,WAAA,GAAAA,WAAA;AAAkC,aAAAf,QAAA,GAAAA,QAAA;AAAmC,aAAAmB,KAAA,GAAAA,KAAA;AALzF,aAAAR,IAAA,GAAayC,IAAI,CAACqD,KAAL,CAAWxD,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,aAAAiI,UAAA,GAAa,CAAC;AAAEC,eAAK,EAAE,MAAT;AAAiBC,iBAAO,EAAE;AAA1B,SAAD,EAAsC;AAAED,eAAK,EAAE,QAAT;AAAmBC,iBAAO,EAAE;AAA5B,SAAtC,CAAb;AACA,aAAA9F,UAAA,GAAkB,EAAlB;AAGmH;;;;mCAE3G;AAAA;;AACN,eAAK3E,KAAL,CAAWwD,IAAX,CAAgBD,SAAhB,CAA0B,UAAAC,IAAI,EAAI;AAChC,mBAAI,CAACmE,KAAL,GAAanE,IAAI,CAAC,OAAD,CAAJ,CAAc2B,MAA3B;AACA,mBAAI,CAACE,UAAL,GAAkB7B,IAAI,CAAC,OAAD,CAAJ,CAAc6B,UAAhC;AACD,WAHD;AAKA,eAAKV,UAAL,CAAgBK,MAAhB,GAAyB,KAAKxF,IAAL,CAAUwF,MAAV,KAAqB,MAArB,GAA8B,QAA9B,GAAyC,MAAlE;AACA,eAAKL,UAAL,CAAgBG,MAAhB,GAAyB,EAAzB;AACA,eAAKH,UAAL,CAAgBI,MAAhB,GAAyB,EAAzB;AACA,eAAKJ,UAAL,CAAgBM,OAAhB,GAA0B,YAA1B;AACD;;;oCAEW2C,K,EAAU;AACpB,eAAKvC,UAAL,CAAgBwC,WAAhB,GAA8BD,KAAK,CAACnD,IAApC;AACA,eAAKqD,SAAL;AACD;;;uCAEc;AACb,eAAKnD,UAAL,CAAgBK,MAAhB,GAAyB,KAAKxF,IAAL,CAAUwF,MAAV,KAAqB,MAArB,GAA8B,QAA9B,GAAyC,MAAlE;AACA,eAAKL,UAAL,CAAgBG,MAAhB,GAAyB,EAAzB;AACA,eAAKH,UAAL,CAAgBI,MAAhB,GAAyB,EAAzB;AACA,eAAK+C,SAAL;AACD;;;oCAEW;AAAA;;AACV,eAAKlI,WAAL,CAAiBK,QAAjB,CAA0B,KAAKoF,UAAL,CAAgBwC,WAA1C,EAAuD,KAAKxC,UAAL,CAAgBX,YAAvE,EAAqF,KAAKC,UAA1F,EACGpB,SADH,CACa,UAACwE,GAAD,EAAkC;AAC3C,mBAAI,CAACJ,KAAL,GAAaI,GAAG,CAAC5C,MAAjB;AACA,mBAAI,CAACE,UAAL,GAAkB0C,GAAG,CAAC1C,UAAtB;AACH,WAJD,EAIG,UAAAtG,KAAK,EAAI;AACR,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACH,WAND;AAOD;;;;;;;uBAzCUuL,mB,EAAmB,mI,EAAA,2I,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,k6C;AAAA;AAAA;ACXhC;;AACE;;AAAI;;AAA8C;;AACpD;;AAGA;;AACE;;AACE;;AACE;;AAAoB;;AAAQ;;AAC5B;;AACO;AAAA;AAAA;;AADP;;AAEF;;AAEA;;AACE;;AAAoB;;AAAM;;AAC1B;;AACO;AAAA;AAAA;;AADP;;AAEF;;AAEA;;AACE;;AAAoB;;AAAM;;AAC1B;;AACQ;AAAA;AAAA;;AACN;;AAGF;;AACF;;AACA;;AAA8C;AAAA,mBAAS,IAAAxC,SAAA,EAAT;AAAoB,WAApB;;AAA+C;;AAAa;;AAC1G;;AAA2C;AAAA,mBAAS,IAAA4C,YAAA,EAAT;AAAuB,WAAvB;;AAAkD;;AAAY;;AAEzG;;AACE;;AACE;;AAA6D;AAAA;AAAA,aAAgC,OAAhC,EAAgC;AAAA,mBAC7E,IAAA5C,SAAA,EAD6E;AAClE,WADkC;;AACV;;AAAW;;AAC9D;;AAA6D;AAAA;AAAA,aAAgC,OAAhC,EAAgC;AAAA,mBAC5E,IAAAA,SAAA,EAD4E;AACjE,WADiC;;AACZ;;AAAc;;AACjE;;AACF;;AAEF;;AACA;;AACA;;AACE;;AAGF;;AACF;;AAEA;;AACE;;AACY;AAAA;AAAA,aAAoC,aAApC,EAAoC;AAAA,mBACrB,IAAAE,WAAA,QADqB;AACF,WADlC;;AAGZ;;AACF;;;;AAtDM;;AAAA;;AASO;;AAAA;;AAMA;;AAAA;;AAMC;;AAAA;;AACE;;AAAA;;AAUqD;;AAAA;;AAEA;;AAAA;;AAQ5D;;AAAA;;AAOK;;AAAA,4GAAoC,cAApC,EAAoC,2BAApC,EAAoC,SAApC,EAAoC,0BAApC;;;;;;;;;sEDvCDsC,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT1E,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACE;;AACF;;;;;;AAKI;;AACE;;AACE;;AAGF;;AACA;;AACE;;AACE;;AAA6B;;AAA2B;;AACxD;;AACE;;AACE;;;;AAGF;;AACF;;AACF;;AACA;;AAAG;;AAAqB;;AAC1B;;AACF;;;;;;AAjBS;;AAAA;;AACA;;AAK0B;;AAAA;;AAGzB;;AAAA;;AAMH;;AAAA;;;;;;AAmBC;;AAAkD;;AAAQ;;;;;;AAC1D;;AAAkD;;;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;AAf1D;;AACE;;AACE;;AAGF;;AACA;;AACE;;AACE;;AACE;;AACE;;;;AAGF;;AACA;;AACA;;AACF;;AACA;;AACE;;AAGF;;AACF;;AACA;;AAAG;;AAAqB;;AAC1B;;AACF;;;;;;AAvBS;;AAAA;;AACA;;AAOC;;AAAA;;AAII;;AAAA;;AACA;;AAAA;;AAGN;;AAAA;;AAKD;;AAAA;;;;;;AA/CT;;AAEE;;AAsBA;;AA0BF;;;;;;;;AAhDO;;AAAA;;AAsBA;;AAAA;;;;QDnBA6E,uB;AAKX,uCAAoB/K,WAApB,EACUjB,WADV,EAC4CE,QAD5C,EACuE;AAAA;;AADnD,aAAAe,WAAA,GAAAA,WAAA;AACV,aAAAjB,WAAA,GAAAA,WAAA;AAAkC,aAAAE,QAAA,GAAAA,QAAA;AAH5C,aAAA+L,UAAA,GAAkB,EAAlB;AAG0E;;;;mCAElE;AACN,eAAKC,YAAL;AACD;;;uCAEc;AAAA;;AACb,cAAMC,aAAa,GAAG,CAAC,KAAKnM,WAAL,CAAiB8B,YAAjB,CAA8BC,MAArD;AACA,eAAKd,WAAL,CAAiBmL,gBAAjB,CAAkC,KAAKpM,WAAL,CAAiB8B,YAAjB,CAA8BC,MAAhE,EAAwE,KAAK+E,WAA7E,EACGvF,IADH,CAEI,2DAAI,UAAA8K,QAAQ,EAAI;AACd,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACjE,MAA7B,EAAqCkE,CAAC,EAAtC,EAA0C;AACxC,kBAAID,QAAQ,CAACC,CAAD,CAAR,CAAYC,MAAZ,KAAuB,KAAvB,IAAgCF,QAAQ,CAACC,CAAD,CAAR,CAAYxF,WAAZ,KAA4BqF,aAAhE,EAA+E;AAC7E,uBAAI,CAAClL,WAAL,CAAiBuL,UAAjB,CAA4BL,aAA5B,EAA2CE,QAAQ,CAACC,CAAD,CAAR,CAAYxM,EAAvD;AACD;AACF;AACF,WAND,CAFJ,EAUG8E,SAVH,CAUa,UAAAyH,QAAQ,EAAI;AACrB,mBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACD,WAZH,EAYK,UAAAjM,KAAK,EAAI;AACR,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACH,WAdH;AAeD;;;sCAEa;AAAA;;AACZ,eAAK6L,UAAL,CAAgBnF,WAAhB,GAA8B,KAAKA,WAAnC;AACA,eAAK7F,WAAL,CAAiBwL,WAAjB,CAA6B,KAAKzM,WAAL,CAAiB8B,YAAjB,CAA8BC,MAA3D,EAAmE,KAAKkK,UAAxE,EACGrH,SADH,CACa,UAACvC,OAAD,EAAsB;AAC/B,mBAAI,CAACgK,QAAL,CAAcK,OAAd,CAAsBrK,OAAtB;;AACAb,mBAAO,CAACC,GAAR,CAAYY,OAAZ;AACA,mBAAI,CAAC4J,UAAL,CAAgBU,OAAhB,GAA0B,EAA1B;AACD,WALH,EAKK,UAAAvM,KAAK,EAAI;AACR,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACH,WAPH;AAQD;;;;;;;uBAzCU4L,uB,EAAuB,mI,EAAA,mI,EAAA,2I;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,wxB;AAAA;AAAA;;;ACZpC;;AACE;;AACE;;AAIA;;AACE;;AAmDF;;AACF;;AAEA;;AACE;;AAA4B;AAAA;;AAAA;;AAAA,gCAAiC,IAAAS,WAAA,EAAjC;AAA8C,WAA9C;;AAC1B;;AACE;;AACO;AAAA;AAAA;;AADP;;AAMA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA5ES;;AAAA;;AAKC;;AAAA;;AA0DK;;AAAA;;AAMG;;AAAA;;;;;;;;;;sED3DLT,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT/E,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;gBACjC;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AACE;;AACA;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEb;;AAAI;;AACtC;;AAA8E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAsC;;AACtJ;;AACF;;;;;;AAPO;;AAAA;;AAGK;;AAAA,sIAAiE,UAAjE,EAAiE,eAAjE;;AAE4C;;AAAA;;;;;;AA0ChD;;AAA4C;;;;AAAiD;;;;;;AAAjD;;AAAA;;;;;;AAF9C;;AACE;;AAAI;;AAAQ;;AAAsB;;AAAS;;AAC3C;;AACF;;;;;;;;AAFc;;AAAA;;AACR;;AAAA;;;;;;;;;;;;;;AAfZ;;AAEE;;AAAI;;AAAY;;AAChB;;AAAG;;AAA2C;;AAE9C;;AACE;;AACE;;AACE;;AAAgB;;AAAI;;AACpB;;AAAI;;AAAI;;AACV;;AACF;;AACA;;AACE;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAyF,QAAA,YAAT;AAA6B,SAA7B;;AACN;;AAAmC;;AACrC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,YAAT;AAA6B,SAA7B;;AACN;;AAAgC;;AAClC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,aAAT;AAA8B,SAA9B;;AACN;;AAAkC;;AACpC;;AACF;;AAEF;;;;;;AAtCK;;AAAA;;AAUK;;AAAA;;AAW2C;;AAAA;;AAIV;;AAAA;;AAIA;;AAAA;;AAIC;;AAAA;;;;;;;;;;QD1DjCC,oB;AASX,oCAAoB7M,WAApB,EAAsDiB,WAAtD,EAAwFf,QAAxF,EAAmH;AAAA;;AAA/F,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAiB,WAAA,GAAAA,WAAA;AAAkC,aAAAf,QAAA,GAAAA,QAAA;AAP9E,aAAA4M,oBAAA,GAAuB,IAAI,0DAAJ,EAAvB;AAEV,aAAAC,mBAAA,GAA+B,KAA/B;AACA,aAAAC,sBAAA,GAAkC,KAAlC;AACA,aAAAvK,OAAA,GAAU,sEAAYC,MAAtB;AAGsH;;;;mCAE9G;AACN,eAAKuK,kBAAL;AACD;;;qCAEazN,C,EAAM;AAClB,eAAKuN,mBAAL,GAA2BvN,CAA3B;AACA;;;6CAEmB;AAAA;;AACnB,eAAKoN,QAAL,GAAgB,IAAI,4DAAJ,CAAiB;AAC/B9B,eAAG,EAAE,KAAKrI,OAAL,GAAe,QAAf,GAA0B,KAAKzC,WAAL,CAAiB8B,YAAjB,CAA8BC,MAAxD,GAAiE,SADvC;AAE/BmL,qBAAS,EAAE,YAAY/J,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAFQ;AAG/BwJ,mBAAO,EAAE,IAHsB;AAI/BC,2BAAe,EAAE,CAAC,OAAD,CAJc;AAK/BC,6BAAiB,EAAE,IALY;AAM/BC,sBAAU,EAAE,KANmB;AAO/BC,uBAAW,EAAE,KAAK,IAAL,GAAY;AAPM,WAAjB,CAAhB;;AASA,eAAKX,QAAL,CAAcY,iBAAd,GAAkC,UAACC,IAAD,EAAU;AAAEA,gBAAI,CAACC,eAAL,GAAuB,KAAvB;AAA+B,WAA7E;;AACA,eAAKd,QAAL,CAAce,aAAd,GAA8B,UAACC,IAAD,EAAO1K,QAAP,EAAiB8B,MAAjB,EAAyBG,OAAzB,EAAqC;AACjE,gBAAIjC,QAAJ,EAAc;AACZ,kBAAMkG,GAAG,GAAU9F,IAAI,CAACqD,KAAL,CAAWzD,QAAX,CAAnB;AACA,kBAAM0H,KAAK,GAAG;AACZ9K,kBAAE,EAAEsJ,GAAG,CAACtJ,EADI;AAEZgL,mBAAG,EAAE1B,GAAG,CAAC0B,GAFG;AAGZ+C,yBAAS,EAAEzE,GAAG,CAACyE,SAHH;AAIZ3C,2BAAW,EAAE9B,GAAG,CAAC8B,WAJL;AAKZ4C,sBAAM,EAAE1E,GAAG,CAAC0E;AALA,eAAd;;AAOA,qBAAI,CAACnD,MAAL,CAAYjC,IAAZ,CAAiBkC,KAAjB;;AACA,kBAAIA,KAAK,CAACkD,MAAV,EAAkB;AAChB,uBAAI,CAAC9N,WAAL,CAAiB0D,iBAAjB,CAAmCkH,KAAK,CAACE,GAAzC;;AACA,uBAAI,CAAC9K,WAAL,CAAiByD,WAAjB,CAA6Bb,QAA7B,GAAwCgI,KAAK,CAACE,GAA9C;AACA3H,4BAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAe,OAAI,CAACvD,WAAL,CAAiByD,WAAhC,CAA7B;AACD;AACF;AACF,WAjBD;AAkBD;;;qCAEYmH,K,EAAc;AAAA;;AACzB,eAAK3J,WAAL,CAAiB8M,YAAjB,CAA8B,KAAK/N,WAAL,CAAiB8B,YAAjB,CAA8BC,MAA5D,EAAoE6I,KAAK,CAAC9K,EAA1E,EAA8E8E,SAA9E,CAAwF,YAAM;AAC5F,mBAAI,CAACoJ,WAAL,GAAmB,OAAI,CAACrD,MAAL,CAAYsD,MAAZ,CAAmB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACJ,MAAF,KAAa,IAAjB;AAAA,aAApB,EAA2C,CAA3C,CAAnB;AACA,mBAAI,CAACE,WAAL,CAAiBF,MAAjB,GAA0B,KAA1B;AACAlD,iBAAK,CAACkD,MAAN,GAAe,IAAf;;AACA,mBAAI,CAAC9N,WAAL,CAAiB0D,iBAAjB,CAAmCkH,KAAK,CAACE,GAAzC;;AACA,mBAAI,CAAC9K,WAAL,CAAiByD,WAAjB,CAA6Bb,QAA7B,GAAwCgI,KAAK,CAACE,GAA9C;AACA3H,wBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAe,OAAI,CAACvD,WAAL,CAAiByD,WAAhC,CAA7B;AACD,WAPD,EAOG,UAAArD,KAAK,EAAI;AACR,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACH,WATD;AAUD;;;oCAEWN,E,EAAY;AAAA;;AACtB,cAAIqO,IAAI,GAAG,IAAX;AACA3M,iBAAO,CAACC,GAAR,CAAY,GAAZ;AAEA0M,cAAI,CAACjO,QAAL,CAAcS,OAAd,CAAsB,6CAAtB,EAAsE,YAAM;AAC1Ea,mBAAO,CAACC,GAAR,CAAY,GAAZ;AACA0M,gBAAI,CAAClN,WAAL,CAAiBmN,WAAjB,CAA6B,OAAI,CAACpO,WAAL,CAAiB8B,YAAjB,CAA8BC,MAA3D,EAAmEjC,EAAnE,EAAuE8E,SAAvE,CAAiF,YAAM;AACrFpD,qBAAO,CAACC,GAAR,CAAY,GAAZ;AACA0M,kBAAI,CAACxD,MAAL,CAAY0D,MAAZ,CAAmB,OAAI,CAAC1D,MAAL,CAAY2D,SAAZ,CAAsB,UAAAJ,CAAC;AAAA,uBAAIA,CAAC,CAACpO,EAAF,KAASA,EAAb;AAAA,eAAvB,CAAnB,EAA4D,CAA5D;AACAqO,kBAAI,CAACjO,QAAL,CAAcsJ,OAAd,CAAsB,yBAAtB;AACD,aAJD,EAIG,UAAApJ,KAAK,EAAI;AACRoB,qBAAO,CAACC,GAAR,CAAY,GAAZ;AACAD,qBAAO,CAACC,GAAR,CAAYrB,KAAZ;AACA+N,kBAAI,CAACjO,QAAL,CAAcE,KAAd,CAAoB,6BAApB;AACH,aARD;AASD,WAXD;AAYD;;;;;;;uBA/EUyM,oB,EAAoB,mI,EAAA,mI,EAAA,2I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,0vC;AAAA;AAAA;ACZjC;;AACE;;AASF;;AAEA;;AAEE;;AAEE;;AAAI;;AAAU;;AAEd;;AAEK;AAAA,mBAAY,IAAA0B,YAAA,QAAZ;AAAgC,WAAhC;;AAGH;;AACA;;AACF;;AAEA;;AACA;;AAAkE;;AAElE;;AACA;;AACF;;AAEA;;AA2CF;;;;AA5EwB;;AAAA;;AAkBf;;AAAA,8KAAiD,UAAjD,EAAiD,YAAjD;;AAS4B;;AAAA;;AAGA;;AAAA;;AAGe;;AAAA;;;;;;;;;;sEDtBvC1B,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT5F,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;gBAC9B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEfH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBE;;AACE;;AAAI;;AAAW;;AACjB;;;;;;AAcQ;;AACE;;AACA;;AAAQ;;AAAyB;;AACnC;;;;;;AAFO;;AAAA;;AACG;;AAAA;;;;;;AAEV;;AACE;;AACA;;AAAQ;;AAA4B;;AACtC;;;;;;AAFO;;AAAA;;AACG;;AAAA;;;;;;;;;;;;;;;;;;AAVd;;AAEE;;AAAI;;AAAmB;;AACvB;;AACE;;AAIA;;AAIF;;AACA;;AAAI;;;;AAAiC;;AACrC;;AACE;;AAA+B;AAAA;;AAAA,iBAASmE,MAAM,CAACkD,eAAP,EAAT;AAAiC,SAAjC,EAAkC,OAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAAlC;;AAAuE;;AAAM;;AAC9G;;AACF;;;;;;;;AAjBqC,0OACsC,aADtC,EACsC,sEADtC;;AAE/B;;AAAA;;AAEG;;AAAA;;AAIA;;AAAA;;AAKH;;AAAA;;;;;;AArBV;;AACE;;AACE;;AACE;;AAAuB;;AAAO;;AAC9B;;AAAuB;;AAAS;;AAChC;;AAAuB;;AAAe;;AACtC;;AACF;;AACA;;AAkBF;;AAEF;;;;;;AApBQ;;AAAA;;;;QDfGC,iB;AAKX,iCAAoBxN,WAApB,EAAsDjB,WAAtD,EAAwFqB,KAAxF,EAAuHnB,QAAvH,EAAkJ;AAAA;;AAA9H,aAAAe,WAAA,GAAAA,WAAA;AAAkC,aAAAjB,WAAA,GAAAA,WAAA;AAAkC,aAAAqB,KAAA,GAAAA,KAAA;AAA+B,aAAAnB,QAAA,GAAAA,QAAA;AAFvH,aAAAiC,gBAAA,GAAmB,QAAnB;AAEqJ;;;;mCAE7I;AAAA;;AACN,eAAKd,KAAL,CAAWwD,IAAX,CAAgBD,SAAhB,CAA0B,UAAAC,IAAI,EAAI;AAChC,mBAAI,CAACwH,QAAL,GAAgBxH,IAAI,CAAC,UAAD,CAAJ,CAAiB2B,MAAjC;AACA,mBAAI,CAACE,UAAL,GAAkB7B,IAAI,CAAC,UAAD,CAAJ,CAAiB6B,UAAnC;AACD,WAHD;AAID;;;uCAEc;AAAA;;AACb,eAAKzF,WAAL,CAAiBiB,WAAjB,CAA6B,KAAKlC,WAAL,CAAiB8B,YAAjB,CAA8BC,MAA3D,EAAmE,KAAK2E,UAAL,CAAgBwC,WAAnF,EAAgG,KAAKxC,UAAL,CAAgBX,YAAhH,EAA8H,KAAK5D,gBAAnI,EACGyC,SADH,CACa,UAACwE,GAAD,EAAqC;AAC9C,mBAAI,CAACiD,QAAL,GAAgBjD,GAAG,CAAC5C,MAApB;AACA,mBAAI,CAACE,UAAL,GAAkB0C,GAAG,CAAC1C,UAAtB;AACD,WAJH,EAIK,UAAAtG,KAAK,EAAI;AACR,mBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACH,WANH;AAOD;;;sCAEaN,E,EAAY;AAAA;;AACxB,eAAKI,QAAL,CAAcS,OAAd,CAAsB,8CAAtB,EAAsE,YAAM;AAC1E,mBAAI,CAACM,WAAL,CAAiByN,aAAjB,CAA+B5O,EAA/B,EAAmC,OAAI,CAACE,WAAL,CAAiB8B,YAAjB,CAA8BC,MAAjE,EAAyE6C,SAAzE,CAAmF,YAAM;AACvF,qBAAI,CAACyH,QAAL,CAAcgC,MAAd,CAAqB,OAAI,CAAChC,QAAL,CAAciC,SAAd,CAAwB,UAAAK,CAAC;AAAA,uBAAIA,CAAC,CAAC7O,EAAF,KAASA,EAAb;AAAA,eAAzB,CAArB,EAAgE,CAAhE;;AACA,qBAAI,CAACI,QAAL,CAAcsJ,OAAd,CAAsB,0BAAtB;AACD,aAHD,EAGG,UAAApJ,KAAK,EAAI;AACR,qBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoB,8BAApB;AACH,aALD;AAMD,WAPD;AAQD;;;oCAEW6I,K,EAAU;AACpB,eAAKvC,UAAL,CAAgBwC,WAAhB,GAA8BD,KAAK,CAACnD,IAApC;AACA,eAAKoG,YAAL;AACD;;;;;;;uBAtCUuC,iB,EAAiB,mI,EAAA,mI,EAAA,+H,EAAA,2I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,w8B;AAAA;AAAA;ACZ9B;;AACE;;AACE;;AACE;;AAAgC;AAAA;AAAA,aAA8B,OAA9B,EAA8B;AAAA,mBAA4B,IAAAvC,YAAA,EAA5B;AAA0C,WAAxE;;AAC9B;;AAA+B;;AACjC;;AACA;;AAAgC;AAAA;AAAA,aAA8B,OAA9B,EAA8B;AAAA,mBAA2B,IAAAA,YAAA,EAA3B;AAAyC,WAAvE;;AAC9B;;AAAoC;;AACtC;;AACA;;AAAgC;AAAA;AAAA,aAA8B,OAA9B,EAA8B;AAAA,mBAA4B,IAAAA,YAAA,EAA5B;AAA0C,WAAxE;;AAC9B;;AAAkC;;AACpC;;AACF;;AACF;;AAEA;;AAIA;;AA8BF;;AAEA;;AACE;;AAGY;AAAA;AAAA,aAAoC,aAApC,EAAoC;AAAA,mBACrB,IAAA7C,WAAA,QADqB;AACF,WADlC;;AAGZ;;AACF;;;;AAxDsC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAMnB;;AAAA;;AAIA;;AAAA;;AAiCL;;AAAA,0FAAsB,YAAtB,EAAsB,yBAAtB,EAAsB,cAAtB,EAAsB,2BAAtB,EAAsB,SAAtB,EAAsB,0BAAtB;;;;;;;;;;sEDxCDoF,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTxH,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACGI;;AACE;;AACE;;AAAgD;;AAAO;;AACzD;;AACA;;AACE;;AAA8C;;AAAK;;AACrD;;AACA;;AACE;;AAAiD;;AAAQ;;AAC3D;;AACF;;;;AARwB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;AAWtB;;AACE;;AAAyD;;AAA0B;;AAAY;;AAC/F;;AACA;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAA8B;;AAAO;;AACnF;;;;AAH2B;;AAAA;;;;;;AAR7B;;AACE;;AACE;;AACF;;AACA;;AACE;;;;AACF;;AACA;;AAKF;;;;;;AAVS;;AAAA;;AAGL;;AAAA;;;;;;;;AASJ;;AAA+E;AAAA;;AAAA;;AAAA;AAAA;;AAC7E;;AAAiF;AAAA;;AAAA;;AAAA;AAAA;;AAAjF;;AACA;;AAAoF;AAAA;;AAAA;;AAAA;AAAA;;AAApF;;AACA;;AAAiG;;AAAK;;AACxG;;;;;;;;AAHmF;;AAAA;;AACG;;AAAA;;AAC5E;;AAAA;;;;;;;;QDtBDyH,Y;AAIX,4BAAmB5O,WAAnB,EAAqDE,QAArD,EAAwFD,MAAxF,EAAwG;AAAA;;AAArF,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAE,QAAA,GAAAA,QAAA;AAAmC,aAAAD,MAAA,GAAAA,MAAA;AAHxF,aAAA+C,KAAA,GAAa,EAAb;AAG2G;;;;mCAEnG;AAAA;;AACN,eAAKhD,WAAL,CAAiB6C,eAAjB,CAAiC+B,SAAjC,CAA2C,UAAAhC,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WAAnD;AACD;;;gCAEO;AAAA;;AACN,eAAK5C,WAAL,CAAiB6O,KAAjB,CAAuB,KAAK7L,KAA5B,EAAmC4B,SAAnC,CAA6C,UAAA7B,IAAI,EAAI;AACnD,mBAAI,CAAC7C,QAAL,CAAcsJ,OAAd,CAAsB,yBAAtB;AACD,WAFD,EAEG,UAAApJ,KAAK,EAAI;AACVoB,mBAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,mBAAI,CAACvB,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACD,WALD,EAKG,YAAM;AACP,mBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WAPD;AAQD;;;mCAEU;AACT,iBAAO,KAAKL,WAAL,CAAiBG,QAAjB,EAAP;AACD;;;iCAEQ;AACPgD,sBAAY,CAAC2L,UAAb,CAAwB,OAAxB;AACA3L,sBAAY,CAAC2L,UAAb,CAAwB,MAAxB;AACA,eAAK9O,WAAL,CAAiB8B,YAAjB,GAAgC,IAAhC;AACA,eAAK9B,WAAL,CAAiByD,WAAjB,GAA+B,IAA/B;AACA,eAAKvD,QAAL,CAAcmC,OAAd,CAAsB,aAAtB;AACA,eAAKpC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;uBAhCUuO,Y,EAAY,mI,EAAA,2I,EAAA,uH;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,gsC;AAAA;AAAA;ACVzB;;AACE;;AACE;;AAAiD;;AAAU;;AAC3D;;AAYA;;AAcA;;AAKF;;AAEF;;;;AAlC4B;;AAAA;;AACpB;;AAAA;;AAYkB;;AAAA;;AAcI;;AAAA;;;;;;;;;;sEDnBjBA,Y,EAAY;cALxB,uDAKwB;eALd;AACT3H,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyBM;;AAA8H;;AAAoB;;;;;;AAMlJ;;AAAsI;;AAAyB;;;;;;AAM/J;;AAAwH;;AAAgB;;;;;;AAMxI;;AAA8H;;AAAmB;;;;;;AAOjJ;;AAAgI;;AAAoB;;;;;;AACpJ;;AAAiI;;AAAsC;;;;;;AACvK;;AAAiI;;AAAoC;;;;;;AAQrK;;AAA8I;;AAAoB;;;;;;AAClK;;AAAuH;;AAAoB;;;;;;;;;;QDhDpI4H,iB;AAOX,iCAAoB/O,WAApB,EAAsDC,MAAtD,EAA8EC,QAA9E,EAAiH8O,EAAjH,EAAkI;AAAA;;AAA9G,aAAAhP,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AAAmC,aAAA8O,EAAA,GAAAA,EAAA;AALvG,aAAAlG,cAAA,GAAiB,IAAI,0DAAJ,EAAjB;AAK2H;;;;mCAE7H;AACN,eAAKmG,QAAL,GAAgB;AACdC,0BAAc,EAAE;AADF,WAAhB,EAGA,KAAKC,kBAAL,EAHA;AAID;;;6CAEoB;AACnB,eAAKC,YAAL,GAAoB,KAAKJ,EAAL,CAAQK,KAAR,CAAc;AAChChJ,kBAAM,EAAE,CAAC,MAAD,CADwB;AAEhCiJ,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAFsB;AAGhC9F,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW8F,QAAhB,CAHuB;AAIhCC,uBAAW,EAAE,CAAC,IAAD,EAAO,0DAAWD,QAAlB,CAJmB;AAKhCE,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAL0B;AAMhCG,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CANuB;AAOhCI,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,EAAsB,0DAAWK,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,CAAL,CAPsB;AAQhCC,2BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB;AARe,WAAd,EASjB;AAAEQ,sBAAU,EAAE,KAAKC;AAAnB,WATiB,CAApB;AAUD;;;+CAEsBC,C,EAAc;AACnC,iBAAOA,CAAC,CAAC7K,GAAF,CAAM,UAAN,EAAkByG,KAAlB,KAA4BoE,CAAC,CAAC7K,GAAF,CAAM,iBAAN,EAAyByG,KAArD,GAA6D,IAA7D,GAAoE;AAAE,wBAAY;AAAd,WAA3E;AACD;;;mCAEU;AAAA;;AACT,cAAI,KAAKuD,YAAL,CAAkBc,KAAtB,EAA6B;AAC3B,iBAAKrP,IAAL,GAAYsP,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKhB,YAAL,CAAkBvD,KAApC,CAAZ;AACA,iBAAK7L,WAAL,CAAiBqQ,QAAjB,CAA0B,KAAKxP,IAA/B,EAAqC+D,SAArC,CAA+C,YAAM;AACnD,qBAAI,CAAC1E,QAAL,CAAcsJ,OAAd,CAAsB,yBAAtB;AACD,aAFD,EAEG,UAAApJ,KAAK,EAAI;AACR,qBAAI,CAACF,QAAL,CAAcE,KAAd,CAAoBA,KAApB;AACH,aAJD,EAIG,YAAM;AACL,qBAAI,CAACJ,WAAL,CAAiB6O,KAAjB,CAAuB,OAAI,CAAChO,IAA5B,EAAkC+D,SAAlC,CAA4C,YAAM;AAChD,uBAAI,CAAC3E,MAAL,CAAYI,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,eAFD;AAGH,aARD;AASD;AACF;;;iCAEQ;AACP,eAAKyI,cAAL,CAAoBwH,IAApB,CAAyB,KAAzB;AACD;;;;;;;uBAlDUvB,iB,EAAiB,mI,EAAA,uH,EAAA,2I,EAAA,2H;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,szC;AAAA;AAAA;ACZ5B;;AACE;;AAAqC;;AAAO;;AAC5C;;AAEA;;AACE;;AAAuD;;AAAQ;;AAC/D;;AACE;;AAAuE;;AACzE;;AACA;;AACE;;AAAyE;;AAC3E;;AACF;;AAEA;;AACE;;AAGA;;AAA8B;;AAAyB;;AACzD;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAIA;;AACA;;AACF;;AAEA;;AACE;;AAA+E;AAAA,mBAAS,IAAAsB,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AAC5G;;AAA8C;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AACzE;;AAEF;;;;AApEM;;AAgBK;;AAAA;;AAMA;;AAAA;;AAEuB;;AAAA;;AAIvB;;AAAA,iPAA6G,UAA7G,EAA6G,YAA7G;;AAEuB;;AAAA;;AAIvB;;AAAA;;AAEuB;;AAAA;;AAIvB;;AAAA;;AAEuB;;AAAA;;AAKvB;;AAAA;;AAEuB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKvB;;AAAA;;AAGuB;;AAAA;;AACA;;AAAA;;AAIgB;;AAAA;;;;;;;;;sEDpDvCxB,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT9H,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;gBAC3B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeO,QAAMqJ,SAAS,GAAW,CAC/B;AAAEC,UAAI,EAAE,EAAR;AAAYjQ,eAAS,EAAE;AAAvB,KAD+B,EAE/B;AAAEiQ,UAAI,EAAE,SAAR;AAAmBjQ,eAAS,EAAE,8FAA9B;AAAmDlB,aAAO,EAAE;AAAE0J,aAAK,EAAE;AAAT,OAA5D;AAA2F0H,iBAAW,EAAE,CAAC,4DAAD;AAAxG,KAF+B,EAG/B;AAAED,UAAI,EAAE,aAAR;AAAuBjQ,eAAS,EAAE,oGAAlC;AAAyDlB,aAAO,EAAE;AAAEuB,YAAI,EAAE;AAAR,OAAlE;AAAkG6P,iBAAW,EAAE,CAAC,4DAAD;AAA/G,KAH+B,EAI/B;AAAED,UAAI,EAAE,aAAR;AAAuBjQ,eAAS,EAAE,8FAAlC;AAAuDlB,aAAO,EAAE;AAAEuB,YAAI,EAAE;AAAR,OAAhE;AAA8F6P,iBAAW,EAAE,CAAC,4DAAD,CAA3G;AAAwHC,mBAAa,EAAE,CAAC,4FAAD;AAAvI,KAJ+B,EAK/B;AAAEF,UAAI,EAAE,OAAR;AAAiBjQ,eAAS,EAAE,qEAA5B;AAA4ClB,aAAO,EAAE;AAAE0J,aAAK,EAAE;AAAT,OAArD;AAA+E0H,iBAAW,EAAE,CAAC,4DAAD;AAA5F,KAL+B,EAM/B;AAAED,UAAI,EAAE,UAAR;AAAoBjQ,eAAS,EAAE,8EAA/B;AAAkDkQ,iBAAW,EAAE,CAAC,4DAAD,CAA/D;AAA4EpR,aAAO,EAAE;AAAE+M,gBAAQ,EAAE;AAAZ;AAArF,KAN+B,EAO/B;AAAEoE,UAAI,EAAE,IAAR;AAAcG,gBAAU,EAAE,EAA1B;AAA8BC,eAAS,EAAE;AAAzC,KAP+B,CAA1B;;;;;;;;;;;;;;;;AChBP;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBrO,YAAM,EAAE;AAFiB,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYqO,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIzP,OAAO,CAACpB,KAAR,CAAc6Q,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\r\n    }\n\n    this.alertify.error(\"You shall not pass!!!\");\n    this.router.navigate(['/home']);\n    return false;\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n\r\n  canDeactivate(component: MemberEditComponent) {\r\n    if (component.editForm.dirty) {\r\n      return confirm(\"Are you sure you want to continue? Any unsaved changes will be lost.\")\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","\r\nexport class ChatMessage {\r\n  public user: string = '';\r\n  public msgText: string = '';\r\n}\r\n","\r\nexport interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber: number = 1;\r\n  pageSize: number = 5;\r\n  likesParam = 'likers';\r\n\r\n  constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n      catchError(error => {\r\n        console.log(error);\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n\r\n  constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(route.params['id']).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(private userService: UserService, private authService: AuthService,\r\n    private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving your data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber: number = 1;\r\n  pageSize: number = 5;\r\n\r\n  constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        console.log(error);\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber: number = 1;\r\n  pageSize: number = 5;\r\n  messageContainer: 'Unread';\r\n\r\n  constructor(private userService: UserService, private authService: AuthService,\r\n    private router: Router, private alertify: AlertifyService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n      this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n      catchError(error => {\r\n        console.log(error);\r\n        this.alertify.error('Problem retrieving messages');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  \n  constructor() { }\n\n  confirm(message: string, okCallBack: (e) => any) {\n    alertify.confirm(message, (e: any) => {\r\n      if (e) {\r\n        okCallBack(e);\r\n      } else {}\r\n    });\r\n  }\n\n  success(message: string) {\n    alertify.success(message);\r\n  }\n\n  error(message: string) {\n    alertify.error(message);\r\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\r\n  }\n\n  message(message: string) {\n    alertify.message(message);\r\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AlertifyService } from './alertify.service';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { from } from 'rxjs';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: User;\r\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient, private alertify: AlertifyService) { }\r\n\r\n  changeMemberPhoto(photoUrl: string) {\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model).pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          localStorage.setItem('user', JSON.stringify(user.user));\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          this.currentUser = user.user;\r\n          this.changeMemberPhoto(this.currentUser.photoUrl);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';          // import signalR\nimport { HttpClient } from '@angular/common/http';\nimport { ChatMessage } from '../_models/ChatMessage';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  private connection: any = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:44379/chatsocket\")   // mapping to the chathub as in startup.cs\n    .configureLogging(signalR.LogLevel.Information)\n    .build();\n  readonly POST_URL = \"https://localhost:44379/api/chat/send\"\n\n  private receivedMessageObject: ChatMessage = new ChatMessage();\n  private sharedObj = new Subject<ChatMessage>();\n\n  constructor(private http: HttpClient) {\n    this.connection.onclose(async () => {\n      await this.start();\n    });\n    this.connection.on(\"ReceiveOne\", (user, message) => { this.mapReceivedMessage(user, message); });\n    this.start();\n  }\n\n\n  // Strart the connection\n  public async start() {\n    try {\n      await this.connection.start();\n      console.log(\"connected\");\n    } catch (err) {\n      console.log(err);\n      setTimeout(() => this.start(), 5000);\n    }\n  }\n\n  private mapReceivedMessage(user: string, message: string): void {\n    this.receivedMessageObject.user = user;\n    this.receivedMessageObject.msgText = message;\n    this.sharedObj.next(this.receivedMessageObject);\n  }\n\n  /* ****************************** Public Mehods **************************************** */\n\n  // Calls the controller method\n  public broadcastMessage(msgDto: any) {\n    this.http.post(this.POST_URL, msgDto).subscribe(data => console.log(data));\n    // this.connection.invoke(\"SendMessage1\", msgDto.user, msgDto.msgText).catch(err => console.error(err));    // This can invoke the server method named as \"SendMethod1\" directly.\n  }\n\n  public retrieveMappedObject(): Observable<ChatMessage> {\n    return this.sharedObj.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError.errors && typeof serverError.errors === 'object') {\r\n            for (const key in serverError.errors) {\r\n              if (serverError.errors[key]) {\r\n                modalStateErrors += serverError.errors[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modalStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { PaginatedResult } from '../_models/Pagination';\r\nimport { map } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\r\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append(\"pageNumber\", page);\r\n      params = params.append(\"pageSize\", itemsPerPage);\r\n    }\r\n\r\n    if (userParams != null) {\r\n      params = params.append(\"minAge\", userParams.minAge);\r\n      params = params.append(\"maxAge\", userParams.maxAge);\r\n      params = params.append(\"gender\", userParams.gender);\r\n      params = params.append(\"orderBy\", userParams.orderBy);\r\n    }\r\n    if (likesParam === 'likers') {\r\n      params = params.append(\"likers\", \"true\");\r\n    }\r\n    if (likesParam === 'likees') {\r\n      params = params.append(\"likees\", \"true\");\r\n    }\r\n\r\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get(\"Pagination\") != null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get(\"Pagination\"));\r\n          }\r\n          return paginatedResult;\r\n        }));\r\n  }\r\n\r\n  getUser(id): Observable<User> {\r\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\r\n  }\r\n\r\n  updateUser(id: number, user: User) {\r\n    return this.http.put(this.baseUrl + 'users/' + id, user);\r\n  }\r\n\r\n  setMainPhoto(userId: number, id: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {})\r\n  }\r\n\r\n  deletePhoto(userId: number, id: number) {\r\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\r\n  }\r\n\r\n  sendLike(id: number, recepientId: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recepientId, {});\r\n  }\r\n\r\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('MessageContainer', messageContainer);\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append(\"pageNumber\", page);\r\n      params = params.append(\"pageSize\", itemsPerPage);\r\n\r\n      return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', { observe: 'response', params })\r\n        .pipe(\r\n          map(response => {\r\n            paginatedResult.result = response.body;\r\n            if (response.headers.get(\"Pagination\") !== null) {\r\n              paginatedResult.pagination = JSON.parse(response.headers.get(\"Pagination\"));\r\n            }\r\n            return paginatedResult;\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  getMessageThread(id: number, recepientId: number) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recepientId);\r\n  }\r\n\r\n  sendMessage(id: number, message: Message) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\r\n  }\r\n\r\n  deleteMessage(id: number, userId: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\r\n  }\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {}).subscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from './_models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n    if (user) {\r\n      this.authService.currentUser = user;\r\n      this.authService.changeMemberPhoto(user.photoUrl);\r\n    }\r\n  }\r\n}\r\n","\n  <app-nav></app-nav>\n  <router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { NgxGalleryModule } from 'ngx-gallery-9';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { TimeagoModule } from 'ngx-timeago'\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { from } from 'rxjs';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { ChatComponent } from './chat/chat.component';\r\n\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    MemberListComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    MemberCardComponent,\r\n    MemberDetailComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    MemberMessagesComponent,\r\n    ChatComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    BsDropdownModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n    BsDatepickerModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains: ['localhost:5000'],\r\n        blacklistedRoutes: ['localhost:5000/api/auth']\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    ErrorInterceptorProvider,\r\n    MemberDetailResolver,\r\n    MemberListResolver,\r\n    MemberEditResolver,\r\n    ListsResolver,\r\n    MessagesResolver,\r\n    PreventUnsavedChanges\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../_services/chat.service';\r\nimport { ChatMessage } from '../_models/ChatMessage';\r\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor(private chatService: ChatService) { }\n\n  ngOnInit(): void {\n    this.chatService.retrieveMappedObject().subscribe((receivedObj: ChatMessage) => { this.addToInbox(receivedObj); });  // calls the service method to get the new messages sent\n\n  }\n\n  msgDto: ChatMessage = new ChatMessage();\n  msgInboxArray: ChatMessage[] = [];\n\n  send(): void {\n    if (this.msgDto) {\n      if (this.msgDto.user.length == 0 || this.msgDto.user.length == 0) {\n        window.alert(\"Both fields are required.\");\n        return;\n      } else {\n        this.chatService.broadcastMessage(this.msgDto);                   // Send the message via a service\n      }\n    }\n  }\n\n  addToInbox(obj: ChatMessage) {\n    let newObj = new ChatMessage();\n    newObj.user = obj.user;\n    newObj.msgText = obj.msgText;\n    this.msgInboxArray.push(newObj);\n\n  }\n}\n","\r\n<div class=\"ud-header\">\r\n  <h2 class=\"text-center\">Public Chat</h2>\r\n</div>\r\n<div class=\"ud-body\">\r\n  <div class=\"msg-box\">\r\n    <ul>\r\n      <li *ngFor=\"let mObj of msgInboxArray\" [ngClass]=\"mObj.user === msgDto.user ? 'in-msg' : 'ex-msg'\">{{mObj.user}} :<br /><span class=\"msg-italic-style\">{{mObj.msgText}}</span></li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"ud-flex-row\">\r\n    <input type=\"text\" placeholder=\"Type message here\" class=\"msg-input\" [(ngModel)]=\"msgDto.msgText\" />\r\n    <button class=\"send-btn\" (click)=\"send()\"><i class=\"fa fa-paper-plane\"></i></button>\r\n  </div>\r\n  <input type=\"text\" placeholder=\"Your name\" class=\"name-box\" [(ngModel)]=\"msgDto.user\" />\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode: any = false;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\r\n  }\n\n  cancelRegisterMode(cancelRegister: boolean) {\n    this.registerMode = cancelRegister;\r\n  }\n\n}\n","\n\n<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\r\nimport { Pagination, PaginatedResult } from '../_models/Pagination';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService, private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\n    this.likesParam = 'likers';\n  }\n\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\n\n  loadUsers() {\r\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\r\n      .subscribe((res: PaginatedResult<User[]>) => {\r\n        this.users = res.result;\r\n        this.pagination = res.pagination;\r\n      }, error => {\r\n        this.alertify.error(error);\r\n      });\r\n  }\n}\n","\n<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"likers\" (click)=\"loadUsers()\">Members who like me</button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"likees\" (click)=\"loadUsers()\">Members who I like</button>\n    </div>\n  </div>\n\n  <br>\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n              (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n  </pagination>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../_models/user';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\r\n      this.alertify.success(\"You have liked: \" + this.user.knownAs);\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\n}\n","\n<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" />\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\"><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(user.id)\"><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>{{user.knownAs}}, {{user.age}}</h6>\n    <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../_models/user';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery-9';\r\nimport { NgForOf } from '@angular/common';\r\nimport { TabsetComponent } from 'ngx-bootstrap/tabs/public_api';\r\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\r\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedtab = params['tab'];\r\n      this.memberTabs.tabs[selectedtab > 0 ? selectedtab : 0].active = true;\r\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\r\n    for (const photo of this.user.photos) {\r\n      imageUrls.push({\r\n        small: photo.url,\r\n        medium: photo.url,\r\n        big: photo.url,\r\n        decription: photo.description\r\n      });\r\n    }\r\n    return imageUrls;\r\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\n\n  //loadUser() {\n  //  this.userService.getUser(+this.route.snapshot.params['id']).subscribe((user: User) => {\r\n  //    this.user = user;\r\n  //  }, error => {\r\n  //      this.alertify.error(error);\r\n  //  });\r\n  //}\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>{{user.knownAs}}'s Profile</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl}}\" alt=\"{{user.knownAs}}\" />\n        <div class=\"card-body\">\n          <strong>Location:</strong>\n          <p>{{user.city}}, {{user.country}}</p>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago }}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created | date: \"mediumDate\"}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\" #memberTabs>\n          <tab heading=\"About {{user.knownAs}}\">\n            <h4>Description</h4>\n            <p>{{user.introduction}}</p>\n            <h4>Looking For</h4>\n            <p>{{user.lookingFor}}</p>\n          </tab>\n          <tab heading=\"Interests\">\n            <h4>Interests</h4>\n            <p>{{user.interests}}</p>\n          </tab>\n          <tab heading=\"Photos\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n          </tab>\n          <tab heading=\"Messages\">\n            <app-member-messages [recepientId]=\"user.id\"></app-member-messages>\n          </tab>\n          <tab heading=\"Chat\">\n            <app-chat></app-chat>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { window } from 'rxjs/operators';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AuthService } from '../../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  user: User;\r\n  photoUrl: string;\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadnotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService, private userService: UserService, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  updateUser() {\r\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\r\n      this.alertify.success(\"Profile updated successfully\");\r\n      this.editForm.reset(this.user);\r\n    }, error => {\r\n        this.alertify.error(error);\r\n    }); \r\n  }\r\n\r\n  updateMainPhoto(photoUrl) {\r\n    this.user.photoUrl = photoUrl;\r\n  }\r\n}\r\n","\n<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <h1>Your Profile</h1>\n    </div>\n    <div class=\"col-md-8\">\n      <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n        <strong>Information:</strong>You have made changes. Any unsaved changes will be lost!\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" />\n        <div class=\"card-body\">\n          <strong>Location:</strong>\n          <p>{{user.city}}, {{user.country}}</p>\n          <div>\n            <strong>Age:</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{user.lastActive | timeago }}</p>\n          </div>\n          <div>\n            <strong>Member Since:</strong>\n            <p>{{user.created | date: \"mediumDate\"}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <button [disabled]=\"!editForm.dirty\" class=\"btn btn-success btn-block\" (click)=\"updateUser()\">Save Changes</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n          <tab heading=\"Edit Profile\">\n            <form #editForm=\"ngForm\" (ngSubmit)=\"updateUser()\">\n              <h4>Description</h4>\n              <textarea name=\"introduction\" class=\"form-control\" rows=\"6\" [(ngModel)]=\"user.introduction\"></textarea>\n              <h4>Looking For</h4>\n              <textarea name=\"lookingFor\" class=\"form-control\" rows=\"6\" [(ngModel)]=\"user.lookingFor\"></textarea>\n              <h4>Interests</h4>\n              <textarea name=\"interests\" class=\"form-control\" rows=\"6\" [(ngModel)]=\"user.interests\"></textarea>\n              <h4>Location Details:</h4>\n              <div class=\"form-inline\">\n                <label for=\"city\">City</label>\n                <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.city\" />\n                <label for=\"country\">Country</label>\n                <input class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"user.country\" />\n              </div>\n            </form>\n          </tab>\n          <tab heading=\"Edit Photos\">\n            <app-photo-editor [photos]=\"user.photos\" (getMemberPhotoChange)=\"updateMainPhoto($event)\"></app-photo-editor>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination, PaginatedResult } from '../../_models/Pagination';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem('user'));\r\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n\r\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n\r\n    this.userParams.gender = this.user.gender === 'male' ? 'female' : 'male';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.userParams.orderBy = 'lastActive';\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.gender = this.user.gender === 'male' ? 'female' : 'male';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\r\n      .subscribe((res: PaginatedResult<User[]>) => {\r\n        this.users = res.result;\r\n        this.pagination = res.pagination;\r\n    }, error => {\r\n        this.alertify.error(error);\r\n    });\r\n  }\r\n}\r\n","\n<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n\n<div class=\"container mt-3\">\n  <form class=\"form-inline\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\n             [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\"\n             [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\"\n              [(ngModel)]=\"userParams.gender\" name=\"gender\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{gender.display}}\n        </option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"loadUsers()\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"resetFilters()\" style=\"margin-left:10px\">Reset Filter</button>\n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" [(ngModel)]=\"userParams.orderBy\"\n               (click)=\"loadUsers()\" btnRadio=\"lastActive\">Last Active</button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" [(ngModel)]=\"userParams.orderBy\"\n                (click)=\"loadUsers()\" btnRadio=\"created\">Newest Members</button>\n      </div>\n    </div>\n\n  </form>\n  <br>\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n      <app-member-card [user]=\"user\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [totalItems]=\"pagination.totalItems\"  [itemsPerPage]=\"pagination.itemsPerPage\" \n              [(ngModel)]=\"pagination.currentPage\" \n              (pageChanged)=\"pageChanged($event)\" \n              previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../_models/Message';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CursorError } from '@angular/compiler/src/ml_parser/lexer';\r\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recepientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService,\n    private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recepientId)\r\n      .pipe(\r\n        tap(messages => {\r\n          for (let i = 0; i < messages.length; i++) {\r\n            if (messages[i].isRead === false && messages[i].recepientId === currentUserId) {\r\n              this.userService.markAsRead(currentUserId, messages[i].id);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(messages => {\r\n        this.messages = messages;\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      });\r\n  }\n\n  sendMessage() {\n    this.newMessage.recepientId = this.recepientId;\r\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\r\n      .subscribe((message: Message) => {\r\n        this.messages.unshift(message);\r\n        console.log(message);\r\n        this.newMessage.content = '';\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      });\r\n  }\n}\n","\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      No messages yet... say hi by using the message box below\n    </div>\n\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recepientId\">\n          <span class=\"chat-img float-left\">\n            <img src=\"{{ message.senderPhotoUrl }}\"\n                 alt=\"{{ message.senderKnownAs }}\"\n                 class=\"rounded-circle\" />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{ message.senderKnownAs }}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">\n                  {{\n                  message.messageSent | timeago\n                  }}\n                </span>\n              </small>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n\n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recepientId\">\n          <span class=\"chat-img float-right\">\n            <img src=\"{{ message.senderPhotoUrl }}\"\n                 alt=\"{{ message.senderKnownAs }}\"\n                 class=\"rounded-circle\" />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">\n                  {{\n                  message.messageSent | timeago\n                  }}\n                </span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(unread)</span>\n                <span *ngIf=\"message.isRead\" class=\"text-success\">(Read {{ message.dateRead | timeago }})</span>\n              </small>\n              <strong class=\"primary-font float-right\">\n                {{\n                message.senderKnownAs\n                }}\n              </strong>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n      <div class=\"input-group\">\n        <input type=\"text\"\n               [(ngModel)]=\"newMessage.content\"\n               name=\"content\"\n               required\n               class=\"form-control input-sm\"\n               placeholder=\"send a private message\" />\n        <div class=\"input-group-append\">\n          <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { Photo } from '../../_models/photo';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() photos: Photo[];\r\n  @Output() getMemberPhotoChange = new EventEmitter<String>();\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver: boolean = false;\r\n  hasAnotherDropZoneOver: boolean = false;\r\n  baseUrl = environment.apiUrl;\r\n  currentMain: Photo;\r\n\r\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n   fileOverbase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n   }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const res: Photo = JSON.parse(response);\r\n        const photo = {\r\n          id: res.id,\r\n          url: res.url,\r\n          dateAdded: res.dateAdded,\r\n          description: res.description,\r\n          isMain: res.isMain\r\n        };\r\n        this.photos.push(photo);\r\n        if (photo.isMain) {\r\n          this.authService.changeMemberPhoto(photo.url);\r\n          this.authService.currentUser.photoUrl = photo.url;\r\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\r\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\r\n      this.currentMain.isMain = false;\r\n      photo.isMain = true;\r\n      this.authService.changeMemberPhoto(photo.url);\r\n      this.authService.currentUser.photoUrl = photo.url;\r\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n    }, error => {\r\n        this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  deletePhoto(id: number) {\r\n    let self = this;\r\n    console.log(\"1\");\r\n\r\n    self.alertify.confirm(\"Are you sure you want to delete this photo?\",  () => {\r\n      console.log(\"2\");\r\n      self.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\r\n        console.log(\"3\");\r\n        self.photos.splice(this.photos.findIndex(p => p.id === id), 1);\r\n        self.alertify.success(\"Photo has been deleted.\");\r\n      }, error => {\r\n          console.log(\"4\");\r\n          console.log(error);\r\n          self.alertify.error(\"Failed to delete the photo.\");\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","\n<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n    <img src=\"{{photo.url}}\" class=\"img-thumbnail p-1\" alt=\"\" />\n    <div class=\"text-center\">\n      <button type=\"button\" class=\"btn btn-sm  mr-1\" (click)=\"setMainPhoto(photo)\" \n              [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n              [disabled]=\"photo.isMain\">Main</button>\n      <button type=\"button\" class=\"btn btn-sm btn-danger\" [disabled]=\"photo.isMain\" (click)=\"deletePhoto(photo.id)\"><i class=\"fa fa-trash fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n\n  <div class=\"col-md-3\">\n\n    <h3>Add Photos</h3>\n\n    <div ng2FileDrop\n         [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n         (fileOver)=\"fileOverbase($event)\"\n         [uploader]=\"uploader\"\n         class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n      <i class=\"fa fa-upload fa-3x\"></i>\n      Drop Photos Here\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th width=\"50%\">Name</th>\n          <th>Size</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td><strong>{{ item?.file?.name }}</strong></td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress mb-4\" style=\"\">\n          <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-success btn-s\"\n              (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button type=\"button\" class=\"btn btn-warning btn-s\"\n              (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n        <span class=\"fa fa-ban\"></span> Cancel all\n      </button>\n      <button type=\"button\" class=\"btn btn-danger btn-s\"\n              (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/Message';\r\nimport { Pagination, PaginatedResult } from '../_models/Pagination';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService, private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\r\n      this.pagination = data['messages'].pagination;\r\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage, this.pagination.itemsPerPage, this.messageContainer)\r\n      .subscribe((res: PaginatedResult<Message[]>) => {\r\n        this.messages = res.result;\r\n        this.pagination = res.pagination;\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      });\r\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm(\"Are you sure you want to delete this message\", () => {\r\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\r\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        this.alertify.success(\"Message has been deleted\");\r\n      }, error => {\r\n          this.alertify.error(\"Failed to delete the message\");\r\n      });\r\n    });\r\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\r\n    this.loadMessages();\r\n  }\n\n}\n","\n<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Unread\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Inbox\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button class=\"btn btn-primary\" [(ngModel)]=\"messageContainer\" btnRadio=\"Outbox\" (click)=\"loadMessages()\">\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n      <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 20%\">From / To</th>\n        <th style=\"width: 20%\">Sent / Received</th>\n        <th style=\"width: 20%\"></th>\n      </tr>\n      <tr *ngFor=\"let message of messages\" [routerLink]=\"['/members',\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab: 3}\">\n        <td>{{message.content}}</td>\n        <td>\n          <div *ngIf=\"messageContainer != 'Outbox'\">\n            <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\n            <strong>{{message.senderKnownAs}}</strong>\n          </div>\n          <div *ngIf=\"messageContainer == 'Outbox'\">\n            <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\n            <strong>{{message.recipientKnownAs}}</strong>\n          </div>\n        </td>\n        <td>{{message.messageSent | timeago}}</td>\n        <td>\n          <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\">Delete</button>\n        </td>\n      </tr>\n    </table>\n\n  </div>\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination [boundaryLinks]=\"true\"\n              [totalItems]=\"pagination.totalItems\"\n              [itemsPerPage]=\"pagination.itemsPerPage\"\n              [(ngModel)]=\"pagination.currentPage\"\n              (pageChanged)=\"pageChanged($event)\"\n              previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  photoUrl: string;\r\n\r\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.alertify.success(\"Logged in successfully!\");\r\n    }, error => {\r\n      console.log(\"Failed to login!\");\r\n      this.alertify.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/members']);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n    this.alertify.message(\"Logged out!\");\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Dating App</a>\r\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messages</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div class=\"dropdown\" *ngIf=\"loggedIn()\" dropdown>\r\n      <span class=\"mr-1\">\r\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\" />\r\n      </span>\r\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\r\n        Welcome {{authService.decodedToken.unique_name | titlecase}}\r\n      </a>\r\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\"><i class=\"fa fa-user\"></i>Edit Profile</a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a class=\"dropdown-item\" (click)=\"logOut()\"><i class=\"fa fa-sign-out\"></i>Log Out</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form #loginForm=\"ngForm\" *ngIf=\"!loggedIn()\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"User Name\" required [(ngModel)]=\"model.username\" name=\"username\">\r\n      <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" required [(ngModel)]=\"model.password\" name=\"password\">\r\n      <button [disabled]=\"!loginForm.valid\" class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n  \r\n</nav>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Input() ValuesFromHome: any;\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    },\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: [null, Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null : { 'mismatch': true };\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertify.success('Registration Successful');\r\n      }, error => {\r\n          this.alertify.error(error);\r\n      }, () => {\r\n          this.authService.login(this.user).subscribe(() => {\r\n            this.router.navigate(['/members']);\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","\n  <form [formGroup]=\"registerForm\">\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\n    <hr>\n\n    <div class=\"form-group\">\n      <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n      <label class=\"radio-inline\">\n        <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n      </label>\n      <label class=\"radio-inline ml-3\">\n        <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\"\n             [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\"\n             class=\"form-control\" formControlName=\"username\" placeholder=\"Username\">\n      <div class=\"invalid-feedback\">Please choose a user name</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n             placeholder=\"Known as\" formControlName=\"knownAs\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\n             placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig]=\"bsConfig\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n             placeholder=\"City\" formControlName=\"city\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n             placeholder=\"Country\" formControlName=\"country\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"password\"\n             [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched }\"\n             class=\"form-control\" formControlName=\"password\" placeholder=\"Password\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">Password is required</div>\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\">Password must be at least 4 characters</div>\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\">Password can not exceed 8 characters</div>\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"password\"\n             [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\n             || registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\"\n             class=\"form-control\" formControlName=\"confirmPassword\" placeholder=\"Confirm Password\">\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\">Password is required</div>\n      <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch') && registerForm.get('confirmPassword').touched\">Passwords must match</div>\n    </div>\n\n    <div class=\"form-group text-center\">\n      <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\" (click)=\"register()\">Register</button>\n      <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n    </div>\n\n  </form>\n\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'members', component: MemberListComponent, resolve: { users: MemberListResolver }, canActivate: [AuthGuard] },\r\n  { path: 'members/:id', component: MemberDetailComponent, resolve: { user: MemberDetailResolver }, canActivate: [AuthGuard] },\r\n  { path: 'member/edit', component: MemberEditComponent, resolve: { user: MemberEditResolver }, canActivate: [AuthGuard], canDeactivate: [PreventUnsavedChanges] },\r\n  { path: 'lists', component: ListsComponent, resolve: { users: ListsResolver }, canActivate: [AuthGuard] },\r\n  { path: 'messages', component: MessagesComponent, canActivate: [AuthGuard], resolve: { messages: MessagesResolver } },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}